/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIDefinitionObservation struct {
}

type APIDefinitionParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type APIDefinitionsAPIDefinitionsObservation struct {
}

type APIDefinitionsAPIDefinitionsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type APIDefinitionsObservation struct {
}

type APIDefinitionsParameters struct {

	// +kubebuilder:validation:Optional
	APIDefinitions []APIDefinitionsAPIDefinitionsParameters `json:"apiDefinitions,omitempty" tf:"api_definitions,omitempty"`
}

type APIEndpointMethodObservation struct {
}

type APIEndpointMethodParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type APIEndpointRulesAPIEndpointMethodObservation struct {
}

type APIEndpointRulesAPIEndpointMethodParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type APIEndpointRulesObservation struct {

	// +kubebuilder:validation:Optional
	ClientMatcher []ClientMatcherObservation `json:"clientMatcher,omitempty" tf:"client_matcher,omitempty"`
}

type APIEndpointRulesParameters struct {

	// +kubebuilder:validation:Optional
	APIEndpointMethod []APIEndpointMethodParameters `json:"apiEndpointMethod,omitempty" tf:"api_endpoint_method,omitempty"`

	// +kubebuilder:validation:Optional
	APIEndpointPath *string `json:"apiEndpointPath,omitempty" tf:"api_endpoint_path,omitempty"`

	// +kubebuilder:validation:Optional
	Action []ActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	ClientMatcher []ClientMatcherParameters `json:"clientMatcher,omitempty" tf:"client_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []MetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	RequestMatcher []RequestMatcherParameters `json:"requestMatcher,omitempty" tf:"request_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificDomain *string `json:"specificDomain,omitempty" tf:"specific_domain,omitempty"`
}

type APIGroupsRulesActionObservation struct {
}

type APIGroupsRulesActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow *bool `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	Deny *bool `json:"deny,omitempty" tf:"deny,omitempty"`
}

type APIGroupsRulesClientMatcherObservation struct {

	// +kubebuilder:validation:Optional
	AsnMatcher []ClientMatcherAsnMatcherObservation `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []ClientMatcherIPMatcherObservation `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`
}

type APIGroupsRulesClientMatcherParameters struct {

	// +kubebuilder:validation:Optional
	AnyClient *bool `json:"anyClient,omitempty" tf:"any_client,omitempty"`

	// +kubebuilder:validation:Optional
	AnyIP *bool `json:"anyIp,omitempty" tf:"any_ip,omitempty"`

	// +kubebuilder:validation:Optional
	AsnList []ClientMatcherAsnListParameters `json:"asnList,omitempty" tf:"asn_list,omitempty"`

	// +kubebuilder:validation:Optional
	AsnMatcher []ClientMatcherAsnMatcherParameters `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSelector []ClientMatcherClientSelectorParameters `json:"clientSelector,omitempty" tf:"client_selector,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []ClientMatcherIPMatcherParameters `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefixList []ClientMatcherIPPrefixListParameters `json:"ipPrefixList,omitempty" tf:"ip_prefix_list,omitempty"`

	// +kubebuilder:validation:Optional
	IPThreatCategoryList []ClientMatcherIPThreatCategoryListParameters `json:"ipThreatCategoryList,omitempty" tf:"ip_threat_category_list,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatcher []ClientMatcherTLSFingerprintMatcherParameters `json:"tlsFingerprintMatcher,omitempty" tf:"tls_fingerprint_matcher,omitempty"`
}

type APIGroupsRulesMetadataObservation struct {
}

type APIGroupsRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type APIGroupsRulesObservation struct {

	// +kubebuilder:validation:Optional
	ClientMatcher []APIGroupsRulesClientMatcherObservation `json:"clientMatcher,omitempty" tf:"client_matcher,omitempty"`
}

type APIGroupsRulesParameters struct {

	// +kubebuilder:validation:Optional
	APIGroup *string `json:"apiGroup,omitempty" tf:"api_group,omitempty"`

	// +kubebuilder:validation:Optional
	Action []APIGroupsRulesActionParameters `json:"action,omitempty" tf:"action,omitempty"`

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	BasePath *string `json:"basePath,omitempty" tf:"base_path,omitempty"`

	// +kubebuilder:validation:Optional
	ClientMatcher []APIGroupsRulesClientMatcherParameters `json:"clientMatcher,omitempty" tf:"client_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []APIGroupsRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	RequestMatcher []APIGroupsRulesRequestMatcherParameters `json:"requestMatcher,omitempty" tf:"request_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificDomain *string `json:"specificDomain,omitempty" tf:"specific_domain,omitempty"`
}

type APIGroupsRulesRequestMatcherObservation struct {
}

type APIGroupsRulesRequestMatcherParameters struct {

	// +kubebuilder:validation:Optional
	CookieMatchers []RequestMatcherCookieMatchersParameters `json:"cookieMatchers,omitempty" tf:"cookie_matchers,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []RequestMatcherHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	QueryParams []RequestMatcherQueryParamsParameters `json:"queryParams,omitempty" tf:"query_params,omitempty"`
}

type APIProtectionRulesObservation struct {

	// +kubebuilder:validation:Optional
	APIEndpointRules []APIEndpointRulesObservation `json:"apiEndpointRules,omitempty" tf:"api_endpoint_rules,omitempty"`

	// +kubebuilder:validation:Optional
	APIGroupsRules []APIGroupsRulesObservation `json:"apiGroupsRules,omitempty" tf:"api_groups_rules,omitempty"`
}

type APIProtectionRulesParameters struct {

	// +kubebuilder:validation:Optional
	APIEndpointRules []APIEndpointRulesParameters `json:"apiEndpointRules,omitempty" tf:"api_endpoint_rules,omitempty"`

	// +kubebuilder:validation:Optional
	APIGroupsRules []APIGroupsRulesParameters `json:"apiGroupsRules,omitempty" tf:"api_groups_rules,omitempty"`
}

type APIRateLimitAPIEndpointRulesObservation struct {
}

type APIRateLimitAPIEndpointRulesParameters struct {

	// +kubebuilder:validation:Optional
	APIEndpointMethod []APIEndpointRulesAPIEndpointMethodParameters `json:"apiEndpointMethod,omitempty" tf:"api_endpoint_method,omitempty"`

	// +kubebuilder:validation:Optional
	APIEndpointPath *string `json:"apiEndpointPath,omitempty" tf:"api_endpoint_path,omitempty"`

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	BasePath *string `json:"basePath,omitempty" tf:"base_path,omitempty"`

	// +kubebuilder:validation:Optional
	InlineRateLimiter []InlineRateLimiterParameters `json:"inlineRateLimiter,omitempty" tf:"inline_rate_limiter,omitempty"`

	// +kubebuilder:validation:Optional
	RefRateLimiter []RefRateLimiterParameters `json:"refRateLimiter,omitempty" tf:"ref_rate_limiter,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificDomain *string `json:"specificDomain,omitempty" tf:"specific_domain,omitempty"`
}

type APIRateLimitObservation struct {
}

type APIRateLimitParameters struct {

	// +kubebuilder:validation:Optional
	APIEndpointRules []APIRateLimitAPIEndpointRulesParameters `json:"apiEndpointRules,omitempty" tf:"api_endpoint_rules,omitempty"`

	// +kubebuilder:validation:Optional
	CustomIPAllowedList []CustomIPAllowedListParameters `json:"customIpAllowedList,omitempty" tf:"custom_ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	IPAllowedList []IPAllowedListParameters `json:"ipAllowedList,omitempty" tf:"ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	NoIPAllowedList *bool `json:"noIpAllowedList,omitempty" tf:"no_ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	ServerURLRules []ServerURLRulesParameters `json:"serverUrlRules,omitempty" tf:"server_url_rules,omitempty"`
}

type ActionObservation struct {
}

type ActionParameters struct {

	// +kubebuilder:validation:Optional
	Allow *bool `json:"allow,omitempty" tf:"allow,omitempty"`

	// +kubebuilder:validation:Optional
	Deny *bool `json:"deny,omitempty" tf:"deny,omitempty"`
}

type ActiveServicePoliciesObservation struct {
}

type ActiveServicePoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Policies []PoliciesParameters `json:"policies,omitempty" tf:"policies,omitempty"`
}

type AdditionalDomainsObservation struct {
}

type AdditionalDomainsParameters struct {

	// +kubebuilder:validation:Optional
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`
}

type AdvancedOptionsAppFirewallObservation struct {
}

type AdvancedOptionsAppFirewallParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type AdvancedOptionsBufferPolicyObservation struct {
}

type AdvancedOptionsBufferPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRequestBytes *float64 `json:"maxRequestBytes,omitempty" tf:"max_request_bytes,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRequestTime *float64 `json:"maxRequestTime,omitempty" tf:"max_request_time,omitempty"`
}

type AdvancedOptionsCorsPolicyObservation struct {
}

type AdvancedOptionsCorsPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	AllowHeaders *string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// +kubebuilder:validation:Optional
	AllowMethods *string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// +kubebuilder:validation:Optional
	AllowOrigin []*string `json:"allowOrigin,omitempty" tf:"allow_origin,omitempty"`

	// +kubebuilder:validation:Optional
	AllowOriginRegex []*string `json:"allowOriginRegex,omitempty" tf:"allow_origin_regex,omitempty"`

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	ExposeHeaders *string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// +kubebuilder:validation:Optional
	MaximumAge *float64 `json:"maximumAge,omitempty" tf:"maximum_age,omitempty"`
}

type AdvancedOptionsObservation struct {
}

type AdvancedOptionsParameters struct {

	// +kubebuilder:validation:Optional
	AppFirewall []AdvancedOptionsAppFirewallParameters `json:"appFirewall,omitempty" tf:"app_firewall,omitempty"`

	// +kubebuilder:validation:Optional
	BufferPolicy []AdvancedOptionsBufferPolicyParameters `json:"bufferPolicy,omitempty" tf:"buffer_policy,omitempty"`

	// +kubebuilder:validation:Optional
	CommonBuffering *bool `json:"commonBuffering,omitempty" tf:"common_buffering,omitempty"`

	// +kubebuilder:validation:Optional
	CommonHashPolicy *bool `json:"commonHashPolicy,omitempty" tf:"common_hash_policy,omitempty"`

	// +kubebuilder:validation:Optional
	CorsPolicy []AdvancedOptionsCorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultRetryPolicy *bool `json:"defaultRetryPolicy,omitempty" tf:"default_retry_policy,omitempty"`

	// +kubebuilder:validation:Optional
	DisableLocationAdd *bool `json:"disableLocationAdd,omitempty" tf:"disable_location_add,omitempty"`

	// +kubebuilder:validation:Optional
	DisableMirroring *bool `json:"disableMirroring,omitempty" tf:"disable_mirroring,omitempty"`

	// +kubebuilder:validation:Optional
	DisablePrefixRewrite *bool `json:"disablePrefixRewrite,omitempty" tf:"disable_prefix_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	DisableSpdy *bool `json:"disableSpdy,omitempty" tf:"disable_spdy,omitempty"`

	// +kubebuilder:validation:Optional
	DisableWebSocketConfig *bool `json:"disableWebSocketConfig,omitempty" tf:"disable_web_socket_config,omitempty"`

	// +kubebuilder:validation:Optional
	DoNotRetractCluster *bool `json:"doNotRetractCluster,omitempty" tf:"do_not_retract_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	EnableSpdy *bool `json:"enableSpdy,omitempty" tf:"enable_spdy,omitempty"`

	// +kubebuilder:validation:Optional
	EndpointSubsets map[string]*string `json:"endpointSubsets,omitempty" tf:"endpoint_subsets,omitempty"`

	// +kubebuilder:validation:Optional
	InheritedWaf *bool `json:"inheritedWaf,omitempty" tf:"inherited_waf,omitempty"`

	// +kubebuilder:validation:Optional
	MirrorPolicy []MirrorPolicyParameters `json:"mirrorPolicy,omitempty" tf:"mirror_policy,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixRewrite *string `json:"prefixRewrite,omitempty" tf:"prefix_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []AdvancedOptionsRequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []AdvancedOptionsResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`

	// +kubebuilder:validation:Optional
	RetractCluster *bool `json:"retractCluster,omitempty" tf:"retract_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	RetryPolicy []RetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificHashPolicy []SpecificHashPolicyParameters `json:"specificHashPolicy,omitempty" tf:"specific_hash_policy,omitempty"`

	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// +kubebuilder:validation:Optional
	Waf []WafParameters `json:"waf,omitempty" tf:"waf,omitempty"`

	// +kubebuilder:validation:Optional
	WafRule []WafRuleParameters `json:"wafRule,omitempty" tf:"waf_rule,omitempty"`

	// +kubebuilder:validation:Optional
	WebSocketConfig []WebSocketConfigParameters `json:"webSocketConfig,omitempty" tf:"web_socket_config,omitempty"`
}

type AdvancedOptionsRequestHeadersToAddObservation struct {
}

type AdvancedOptionsRequestHeadersToAddParameters struct {

	// +kubebuilder:validation:Optional
	Append *bool `json:"append,omitempty" tf:"append,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SecretValue []RequestHeadersToAddSecretValueParameters `json:"secretValue,omitempty" tf:"secret_value,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddObservation struct {
}

type AdvancedOptionsResponseHeadersToAddParameters struct {

	// +kubebuilder:validation:Optional
	Append *bool `json:"append,omitempty" tf:"append,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SecretValue []AdvancedOptionsResponseHeadersToAddSecretValueParameters `json:"secretValue,omitempty" tf:"secret_value,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueClearSecretInfoObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []AdvancedOptionsResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []AdvancedOptionsResponseHeadersToAddSecretValueClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []AdvancedOptionsResponseHeadersToAddSecretValueVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []AdvancedOptionsResponseHeadersToAddSecretValueWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueVaultSecretInfoObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type AdvancedOptionsResponseHeadersToAddSecretValueWingmanSecretInfoObservation struct {
}

type AdvancedOptionsResponseHeadersToAddSecretValueWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type AdvertiseCustomObservation struct {

	// +kubebuilder:validation:Optional
	AdvertiseWhere []AdvertiseWhereObservation `json:"advertiseWhere,omitempty" tf:"advertise_where,omitempty"`
}

type AdvertiseCustomParameters struct {

	// +kubebuilder:validation:Optional
	AdvertiseWhere []AdvertiseWhereParameters `json:"advertiseWhere,omitempty" tf:"advertise_where,omitempty"`
}

type AdvertiseOnPublicObservation struct {

	// +kubebuilder:validation:Optional
	PublicIP []PublicIPObservation `json:"publicIp,omitempty" tf:"public_ip,omitempty"`
}

type AdvertiseOnPublicParameters struct {

	// +kubebuilder:validation:Optional
	PublicIP []PublicIPParameters `json:"publicIp,omitempty" tf:"public_ip,omitempty"`
}

type AdvertiseWhereObservation struct {

	// +kubebuilder:validation:Optional
	Site []SiteObservation `json:"site,omitempty" tf:"site,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualNetwork []VirtualNetworkObservation `json:"virtualNetwork,omitempty" tf:"virtual_network,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualSite []VirtualSiteObservation `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`

	// +kubebuilder:validation:Optional
	Vk8SService []Vk8SServiceObservation `json:"vk8sService,omitempty" tf:"vk8s_service,omitempty"`
}

type AdvertiseWhereParameters struct {

	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	Site []SiteParameters `json:"site,omitempty" tf:"site,omitempty"`

	// +kubebuilder:validation:Optional
	UseDefaultPort *bool `json:"useDefaultPort,omitempty" tf:"use_default_port,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualNetwork []VirtualNetworkParameters `json:"virtualNetwork,omitempty" tf:"virtual_network,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualSite []VirtualSiteParameters `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`

	// +kubebuilder:validation:Optional
	Vk8SService []Vk8SServiceParameters `json:"vk8sService,omitempty" tf:"vk8s_service,omitempty"`
}

type AppFirewallDetectionControlObservation struct {
}

type AppFirewallDetectionControlParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeAttackTypeContexts []ExcludeAttackTypeContextsParameters `json:"excludeAttackTypeContexts,omitempty" tf:"exclude_attack_type_contexts,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeBotNameContexts []ExcludeBotNameContextsParameters `json:"excludeBotNameContexts,omitempty" tf:"exclude_bot_name_contexts,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeSignatureContexts []ExcludeSignatureContextsParameters `json:"excludeSignatureContexts,omitempty" tf:"exclude_signature_contexts,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludeViolationContexts []ExcludeViolationContextsParameters `json:"excludeViolationContexts,omitempty" tf:"exclude_violation_contexts,omitempty"`
}

type AppendHeadersObservation struct {
}

type AppendHeadersParameters struct {

	// +kubebuilder:validation:Optional
	AutoTypeHeaderName *string `json:"autoTypeHeaderName,omitempty" tf:"auto_type_header_name,omitempty"`

	// +kubebuilder:validation:Optional
	InferenceHeaderName *string `json:"inferenceHeaderName,omitempty" tf:"inference_header_name,omitempty"`
}

type ArgMatchersItemObservation struct {
}

type ArgMatchersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type ArgMatchersObservation struct {
}

type ArgMatchersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []ArgMatchersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type AsnListObservation struct {
}

type AsnListParameters struct {

	// +kubebuilder:validation:Required
	AsNumbers []*float64 `json:"asNumbers" tf:"as_numbers,omitempty"`
}

type AsnMatcherAsnSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type AsnMatcherAsnSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type AsnMatcherObservation struct {

	// +kubebuilder:validation:Optional
	AsnSets []AsnSetsObservation `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type AsnMatcherParameters struct {

	// +kubebuilder:validation:Optional
	AsnSets []AsnSetsParameters `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type AsnSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type AsnSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type BackOffObservation struct {
}

type BackOffParameters struct {

	// +kubebuilder:validation:Optional
	BaseInterval *float64 `json:"baseInterval,omitempty" tf:"base_interval,omitempty"`

	// +kubebuilder:validation:Optional
	MaxInterval *float64 `json:"maxInterval,omitempty" tf:"max_interval,omitempty"`
}

type BlockObservation struct {
}

type BlockParameters struct {

	// +kubebuilder:validation:Optional
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// +kubebuilder:validation:Optional
	BodyHash *string `json:"bodyHash,omitempty" tf:"body_hash,omitempty"`

	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type BlockedClientsHTTPHeaderObservation struct {
}

type BlockedClientsHTTPHeaderParameters struct {

	// +kubebuilder:validation:Optional
	Headers []HTTPHeaderHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`
}

type BlockedClientsMetadataObservation struct {
}

type BlockedClientsMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type BlockedClientsObservation struct {
}

type BlockedClientsParameters struct {

	// +kubebuilder:validation:Optional
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// +kubebuilder:validation:Optional
	AsNumber *float64 `json:"asNumber,omitempty" tf:"as_number,omitempty"`

	// +kubebuilder:validation:Optional
	BotSkipProcessing *bool `json:"botSkipProcessing,omitempty" tf:"bot_skip_processing,omitempty"`

	// +kubebuilder:validation:Optional
	ExpirationTimestamp *string `json:"expirationTimestamp,omitempty" tf:"expiration_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPHeader []BlockedClientsHTTPHeaderParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefix *string `json:"ipPrefix,omitempty" tf:"ip_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []BlockedClientsMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	SkipProcessing *bool `json:"skipProcessing,omitempty" tf:"skip_processing,omitempty"`

	// +kubebuilder:validation:Optional
	UserIdentifier *string `json:"userIdentifier,omitempty" tf:"user_identifier,omitempty"`

	// +kubebuilder:validation:Optional
	WafSkipProcessing *bool `json:"wafSkipProcessing,omitempty" tf:"waf_skip_processing,omitempty"`
}

type BodyMatcherObservation struct {
}

type BodyMatcherParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type BotDefenseObservation struct {
}

type BotDefenseParameters struct {

	// +kubebuilder:validation:Optional
	Policy []BotDefensePolicyParameters `json:"policy,omitempty" tf:"policy,omitempty"`

	// +kubebuilder:validation:Optional
	RegionalEndpoint *string `json:"regionalEndpoint,omitempty" tf:"regional_endpoint,omitempty"`

	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type BotDefensePolicyObservation struct {
}

type BotDefensePolicyParameters struct {

	// +kubebuilder:validation:Optional
	DisableJsInsert *bool `json:"disableJsInsert,omitempty" tf:"disable_js_insert,omitempty"`

	// +kubebuilder:validation:Optional
	DisableMobileSdk *bool `json:"disableMobileSdk,omitempty" tf:"disable_mobile_sdk,omitempty"`

	// +kubebuilder:validation:Optional
	JsDownloadPath *string `json:"jsDownloadPath,omitempty" tf:"js_download_path,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertAllPages []JsInsertAllPagesParameters `json:"jsInsertAllPages,omitempty" tf:"js_insert_all_pages,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertAllPagesExcept []JsInsertAllPagesExceptParameters `json:"jsInsertAllPagesExcept,omitempty" tf:"js_insert_all_pages_except,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertionRules []JsInsertionRulesParameters `json:"jsInsertionRules,omitempty" tf:"js_insertion_rules,omitempty"`

	// +kubebuilder:validation:Optional
	MobileSdkConfig []MobileSdkConfigParameters `json:"mobileSdkConfig,omitempty" tf:"mobile_sdk_config,omitempty"`

	// +kubebuilder:validation:Optional
	ProtectedAppEndpoints []ProtectedAppEndpointsParameters `json:"protectedAppEndpoints,omitempty" tf:"protected_app_endpoints,omitempty"`
}

type BufferPolicyObservation struct {
}

type BufferPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRequestBytes *float64 `json:"maxRequestBytes,omitempty" tf:"max_request_bytes,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRequestTime *float64 `json:"maxRequestTime,omitempty" tf:"max_request_time,omitempty"`
}

type CaptchaChallengeObservation struct {
}

type CaptchaChallengeParameters struct {

	// +kubebuilder:validation:Optional
	CookieExpiry *float64 `json:"cookieExpiry,omitempty" tf:"cookie_expiry,omitempty"`

	// +kubebuilder:validation:Optional
	CustomPage *string `json:"customPage,omitempty" tf:"custom_page,omitempty"`
}

type CaptchaChallengeParametersObservation struct {
}

type CaptchaChallengeParametersParameters struct {

	// +kubebuilder:validation:Optional
	CookieExpiry *float64 `json:"cookieExpiry,omitempty" tf:"cookie_expiry,omitempty"`

	// +kubebuilder:validation:Optional
	CustomPage *string `json:"customPage,omitempty" tf:"custom_page,omitempty"`
}

type ClientMatcherAsnListObservation struct {
}

type ClientMatcherAsnListParameters struct {

	// +kubebuilder:validation:Required
	AsNumbers []*float64 `json:"asNumbers" tf:"as_numbers,omitempty"`
}

type ClientMatcherAsnMatcherObservation struct {

	// +kubebuilder:validation:Optional
	AsnSets []AsnMatcherAsnSetsObservation `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type ClientMatcherAsnMatcherParameters struct {

	// +kubebuilder:validation:Optional
	AsnSets []AsnMatcherAsnSetsParameters `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type ClientMatcherClientSelectorObservation struct {
}

type ClientMatcherClientSelectorParameters struct {

	// +kubebuilder:validation:Required
	Expressions []*string `json:"expressions" tf:"expressions,omitempty"`
}

type ClientMatcherIPMatcherObservation struct {

	// +kubebuilder:validation:Optional
	PrefixSets []IPMatcherPrefixSetsObservation `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type ClientMatcherIPMatcherParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixSets []IPMatcherPrefixSetsParameters `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type ClientMatcherIPPrefixListObservation struct {
}

type ClientMatcherIPPrefixListParameters struct {

	// +kubebuilder:validation:Required
	IPPrefixes []*string `json:"ipPrefixes" tf:"ip_prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`
}

type ClientMatcherIPThreatCategoryListObservation struct {
}

type ClientMatcherIPThreatCategoryListParameters struct {

	// +kubebuilder:validation:Required
	IPThreatCategories []*string `json:"ipThreatCategories" tf:"ip_threat_categories,omitempty"`
}

type ClientMatcherObservation struct {

	// +kubebuilder:validation:Optional
	AsnMatcher []AsnMatcherObservation `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []IPMatcherObservation `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`
}

type ClientMatcherParameters struct {

	// +kubebuilder:validation:Optional
	AnyClient *bool `json:"anyClient,omitempty" tf:"any_client,omitempty"`

	// +kubebuilder:validation:Optional
	AnyIP *bool `json:"anyIp,omitempty" tf:"any_ip,omitempty"`

	// +kubebuilder:validation:Optional
	AsnList []AsnListParameters `json:"asnList,omitempty" tf:"asn_list,omitempty"`

	// +kubebuilder:validation:Optional
	AsnMatcher []AsnMatcherParameters `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSelector []ClientSelectorParameters `json:"clientSelector,omitempty" tf:"client_selector,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []IPMatcherParameters `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefixList []IPPrefixListParameters `json:"ipPrefixList,omitempty" tf:"ip_prefix_list,omitempty"`

	// +kubebuilder:validation:Optional
	IPThreatCategoryList []IPThreatCategoryListParameters `json:"ipThreatCategoryList,omitempty" tf:"ip_threat_category_list,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatcher []TLSFingerprintMatcherParameters `json:"tlsFingerprintMatcher,omitempty" tf:"tls_fingerprint_matcher,omitempty"`
}

type ClientMatcherTLSFingerprintMatcherObservation struct {
}

type ClientMatcherTLSFingerprintMatcherParameters struct {

	// +kubebuilder:validation:Optional
	Classes []*string `json:"classes,omitempty" tf:"classes,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludedValues []*string `json:"excludedValues,omitempty" tf:"excluded_values,omitempty"`
}

type ClientNameMatcherObservation struct {
}

type ClientNameMatcherParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type ClientSelectorObservation struct {
}

type ClientSelectorParameters struct {

	// +kubebuilder:validation:Required
	Expressions []*string `json:"expressions" tf:"expressions,omitempty"`
}

type ClientSideDefenseObservation struct {
}

type ClientSideDefenseParameters struct {

	// +kubebuilder:validation:Optional
	Policy []ClientSideDefensePolicyParameters `json:"policy,omitempty" tf:"policy,omitempty"`
}

type ClientSideDefensePolicyObservation struct {
}

type ClientSideDefensePolicyParameters struct {

	// +kubebuilder:validation:Optional
	DisableJsInsert *bool `json:"disableJsInsert,omitempty" tf:"disable_js_insert,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertAllPages *bool `json:"jsInsertAllPages,omitempty" tf:"js_insert_all_pages,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertAllPagesExcept []PolicyJsInsertAllPagesExceptParameters `json:"jsInsertAllPagesExcept,omitempty" tf:"js_insert_all_pages_except,omitempty"`

	// +kubebuilder:validation:Optional
	JsInsertionRules []PolicyJsInsertionRulesParameters `json:"jsInsertionRules,omitempty" tf:"js_insertion_rules,omitempty"`
}

type ClusterObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type ClusterParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type CompressionParamsObservation struct {
}

type CompressionParamsParameters struct {

	// +kubebuilder:validation:Optional
	ContentLength *float64 `json:"contentLength,omitempty" tf:"content_length,omitempty"`

	// +kubebuilder:validation:Optional
	ContentType []*string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	// +kubebuilder:validation:Optional
	DisableOnEtagHeader *bool `json:"disableOnEtagHeader,omitempty" tf:"disable_on_etag_header,omitempty"`

	// +kubebuilder:validation:Optional
	RemoveAcceptEncodingHeader *bool `json:"removeAcceptEncodingHeader,omitempty" tf:"remove_accept_encoding_header,omitempty"`
}

type CookieMatchersItemObservation struct {
}

type CookieMatchersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type CookieMatchersObservation struct {
}

type CookieMatchersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []ItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type CookieStickinessObservation struct {
}

type CookieStickinessParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

type CorsPolicyObservation struct {
}

type CorsPolicyParameters struct {

	// +kubebuilder:validation:Optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	AllowHeaders *string `json:"allowHeaders,omitempty" tf:"allow_headers,omitempty"`

	// +kubebuilder:validation:Optional
	AllowMethods *string `json:"allowMethods,omitempty" tf:"allow_methods,omitempty"`

	// +kubebuilder:validation:Optional
	AllowOrigin []*string `json:"allowOrigin,omitempty" tf:"allow_origin,omitempty"`

	// +kubebuilder:validation:Optional
	AllowOriginRegex []*string `json:"allowOriginRegex,omitempty" tf:"allow_origin_regex,omitempty"`

	// +kubebuilder:validation:Optional
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// +kubebuilder:validation:Optional
	ExposeHeaders *string `json:"exposeHeaders,omitempty" tf:"expose_headers,omitempty"`

	// +kubebuilder:validation:Optional
	MaxAge *string `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// +kubebuilder:validation:Optional
	MaximumAge *float64 `json:"maximumAge,omitempty" tf:"maximum_age,omitempty"`
}

type CrlObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type CrlParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type CustomIPAllowedListObservation struct {
}

type CustomIPAllowedListParameters struct {

	// +kubebuilder:validation:Optional
	RateLimiterAllowedPrefixes []RateLimiterAllowedPrefixesParameters `json:"rateLimiterAllowedPrefixes,omitempty" tf:"rate_limiter_allowed_prefixes,omitempty"`
}

type CustomIPAllowedListRateLimiterAllowedPrefixesObservation struct {
}

type CustomIPAllowedListRateLimiterAllowedPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type CustomRouteObjectObservation struct {
}

type CustomRouteObjectParameters struct {

	// +kubebuilder:validation:Optional
	RouteRef []RouteRefParameters `json:"routeRef,omitempty" tf:"route_ref,omitempty"`
}

type CustomSecurityObservation struct {
}

type CustomSecurityParameters struct {

	// +kubebuilder:validation:Required
	CipherSuites []*string `json:"cipherSuites" tf:"cipher_suites,omitempty"`

	// +kubebuilder:validation:Optional
	MaxVersion *string `json:"maxVersion,omitempty" tf:"max_version,omitempty"`

	// +kubebuilder:validation:Optional
	MinVersion *string `json:"minVersion,omitempty" tf:"min_version,omitempty"`
}

type DataGuardRulesMetadataObservation struct {
}

type DataGuardRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DataGuardRulesObservation struct {
}

type DataGuardRulesParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	ApplyDataGuard *bool `json:"applyDataGuard,omitempty" tf:"apply_data_guard,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []DataGuardRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []DataGuardRulesPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	SkipDataGuard *bool `json:"skipDataGuard,omitempty" tf:"skip_data_guard,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type DataGuardRulesPathObservation struct {
}

type DataGuardRulesPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type DdosClientSourceAsnListObservation struct {
}

type DdosClientSourceAsnListParameters struct {

	// +kubebuilder:validation:Required
	AsNumbers []*float64 `json:"asNumbers" tf:"as_numbers,omitempty"`
}

type DdosClientSourceObservation struct {
}

type DdosClientSourceParameters struct {

	// +kubebuilder:validation:Optional
	AsnList []DdosClientSourceAsnListParameters `json:"asnList,omitempty" tf:"asn_list,omitempty"`

	// +kubebuilder:validation:Optional
	CountryList []*string `json:"countryList,omitempty" tf:"country_list,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatcher []DdosClientSourceTLSFingerprintMatcherParameters `json:"tlsFingerprintMatcher,omitempty" tf:"tls_fingerprint_matcher,omitempty"`
}

type DdosClientSourceTLSFingerprintMatcherObservation struct {
}

type DdosClientSourceTLSFingerprintMatcherParameters struct {

	// +kubebuilder:validation:Optional
	Classes []*string `json:"classes,omitempty" tf:"classes,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludedValues []*string `json:"excludedValues,omitempty" tf:"excluded_values,omitempty"`
}

type DdosMitigationRulesIPPrefixListObservation struct {
}

type DdosMitigationRulesIPPrefixListParameters struct {

	// +kubebuilder:validation:Required
	IPPrefixes []*string `json:"ipPrefixes" tf:"ip_prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`
}

type DdosMitigationRulesMetadataObservation struct {
}

type DdosMitigationRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DdosMitigationRulesObservation struct {
}

type DdosMitigationRulesParameters struct {

	// +kubebuilder:validation:Optional
	Block *bool `json:"block,omitempty" tf:"block,omitempty"`

	// +kubebuilder:validation:Optional
	DdosClientSource []DdosClientSourceParameters `json:"ddosClientSource,omitempty" tf:"ddos_client_source,omitempty"`

	// +kubebuilder:validation:Optional
	ExpirationTimestamp *string `json:"expirationTimestamp,omitempty" tf:"expiration_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefixList []DdosMitigationRulesIPPrefixListParameters `json:"ipPrefixList,omitempty" tf:"ip_prefix_list,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []DdosMitigationRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`
}

type DefaultRoutePoolsObservation struct {

	// +kubebuilder:validation:Optional
	Cluster []ClusterObservation `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// +kubebuilder:validation:Optional
	Pool []PoolObservation `json:"pool,omitempty" tf:"pool,omitempty"`
}

type DefaultRoutePoolsParameters struct {

	// +kubebuilder:validation:Optional
	Cluster []ClusterParameters `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// +kubebuilder:validation:Optional
	EndpointSubsets map[string]*string `json:"endpointSubsets,omitempty" tf:"endpoint_subsets,omitempty"`

	// +kubebuilder:validation:Optional
	Pool []PoolParameters `json:"pool,omitempty" tf:"pool,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type DirectResponseRouteHeadersObservation struct {
}

type DirectResponseRouteHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type DirectResponseRouteObservation struct {
}

type DirectResponseRouteParameters struct {

	// +kubebuilder:validation:Optional
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []DirectResponseRouteHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	Path []DirectResponseRoutePathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	RouteDirectResponse []RouteDirectResponseParameters `json:"routeDirectResponse,omitempty" tf:"route_direct_response,omitempty"`
}

type DirectResponseRoutePathObservation struct {
}

type DirectResponseRoutePathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type DomainMatcherObservation struct {
}

type DomainMatcherParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`
}

type DomainObservation struct {
}

type DomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type EnableAPIDiscoveryObservation struct {
}

type EnableAPIDiscoveryParameters struct {

	// +kubebuilder:validation:Optional
	DisableLearnFromRedirectTraffic *bool `json:"disableLearnFromRedirectTraffic,omitempty" tf:"disable_learn_from_redirect_traffic,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLearnFromRedirectTraffic *bool `json:"enableLearnFromRedirectTraffic,omitempty" tf:"enable_learn_from_redirect_traffic,omitempty"`
}

type EnableDiscoveryObservation struct {
}

type EnableDiscoveryParameters struct {

	// +kubebuilder:validation:Optional
	DisableLearnFromRedirectTraffic *bool `json:"disableLearnFromRedirectTraffic,omitempty" tf:"disable_learn_from_redirect_traffic,omitempty"`

	// +kubebuilder:validation:Optional
	EnableLearnFromRedirectTraffic *bool `json:"enableLearnFromRedirectTraffic,omitempty" tf:"enable_learn_from_redirect_traffic,omitempty"`
}

type EnableIPReputationObservation struct {
}

type EnableIPReputationParameters struct {

	// +kubebuilder:validation:Required
	IPThreatCategories []*string `json:"ipThreatCategories" tf:"ip_threat_categories,omitempty"`
}

type EnableTrustClientIPHeadersObservation struct {
}

type EnableTrustClientIPHeadersParameters struct {

	// +kubebuilder:validation:Optional
	ClientIPHeaders []*string `json:"clientIpHeaders,omitempty" tf:"client_ip_headers,omitempty"`
}

type ExcludeAttackTypeContextsObservation struct {
}

type ExcludeAttackTypeContextsParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeAttackType *string `json:"excludeAttackType,omitempty" tf:"exclude_attack_type,omitempty"`
}

type ExcludeBotNameContextsObservation struct {
}

type ExcludeBotNameContextsParameters struct {

	// +kubebuilder:validation:Optional
	BotName *string `json:"botName,omitempty" tf:"bot_name,omitempty"`
}

type ExcludeListDomainObservation struct {
}

type ExcludeListDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type ExcludeListMetadataObservation struct {
}

type ExcludeListMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ExcludeListObservation struct {
}

type ExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []DomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []ExcludeListMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []PathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type ExcludeListPathObservation struct {
}

type ExcludeListPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type ExcludeSignatureContextsObservation struct {
}

type ExcludeSignatureContextsParameters struct {

	// +kubebuilder:validation:Optional
	SignatureID *float64 `json:"signatureId,omitempty" tf:"signature_id,omitempty"`
}

type ExcludeViolationContextsObservation struct {
}

type ExcludeViolationContextsParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeViolation *string `json:"excludeViolation,omitempty" tf:"exclude_violation,omitempty"`
}

type FlagObservation struct {
}

type FlagParameters struct {

	// +kubebuilder:validation:Optional
	AppendHeaders []AppendHeadersParameters `json:"appendHeaders,omitempty" tf:"append_headers,omitempty"`

	// +kubebuilder:validation:Optional
	NoHeaders *bool `json:"noHeaders,omitempty" tf:"no_headers,omitempty"`
}

type HTTPHeaderHeadersObservation struct {
}

type HTTPHeaderHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type HTTPLoadbalancerAppFirewallObservation struct {
}

type HTTPLoadbalancerAppFirewallParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type HTTPLoadbalancerObservation struct {

	// +kubebuilder:validation:Optional
	APIProtectionRules []APIProtectionRulesObservation `json:"apiProtectionRules,omitempty" tf:"api_protection_rules,omitempty"`

	// +kubebuilder:validation:Optional
	AdvertiseCustom []AdvertiseCustomObservation `json:"advertiseCustom,omitempty" tf:"advertise_custom,omitempty"`

	// +kubebuilder:validation:Optional
	AdvertiseOnPublic []AdvertiseOnPublicObservation `json:"advertiseOnPublic,omitempty" tf:"advertise_on_public,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultRoutePools []DefaultRoutePoolsObservation `json:"defaultRoutePools,omitempty" tf:"default_route_pools,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPS []HTTPSObservation `json:"https,omitempty" tf:"https,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPSAutoCert []HTTPSAutoCertObservation `json:"httpsAutoCert,omitempty" tf:"https_auto_cert,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyBasedChallenge []PolicyBasedChallengeObservation `json:"policyBasedChallenge,omitempty" tf:"policy_based_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	Routes []RoutesObservation `json:"routes,omitempty" tf:"routes,omitempty"`
}

type HTTPLoadbalancerParameters struct {

	// +kubebuilder:validation:Optional
	APIDefinition []APIDefinitionParameters `json:"apiDefinition,omitempty" tf:"api_definition,omitempty"`

	// +kubebuilder:validation:Optional
	APIDefinitions []APIDefinitionsParameters `json:"apiDefinitions,omitempty" tf:"api_definitions,omitempty"`

	// +kubebuilder:validation:Optional
	APIProtectionRules []APIProtectionRulesParameters `json:"apiProtectionRules,omitempty" tf:"api_protection_rules,omitempty"`

	// +kubebuilder:validation:Optional
	APIRateLimit []APIRateLimitParameters `json:"apiRateLimit,omitempty" tf:"api_rate_limit,omitempty"`

	// +kubebuilder:validation:Optional
	ActiveServicePolicies []ActiveServicePoliciesParameters `json:"activeServicePolicies,omitempty" tf:"active_service_policies,omitempty"`

	// +kubebuilder:validation:Optional
	AddLocation *bool `json:"addLocation,omitempty" tf:"add_location,omitempty"`

	// +kubebuilder:validation:Optional
	AdvertiseCustom []AdvertiseCustomParameters `json:"advertiseCustom,omitempty" tf:"advertise_custom,omitempty"`

	// +kubebuilder:validation:Optional
	AdvertiseOnPublic []AdvertiseOnPublicParameters `json:"advertiseOnPublic,omitempty" tf:"advertise_on_public,omitempty"`

	// +kubebuilder:validation:Optional
	AdvertiseOnPublicDefaultVip *bool `json:"advertiseOnPublicDefaultVip,omitempty" tf:"advertise_on_public_default_vip,omitempty"`

	// +kubebuilder:validation:Optional
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// +kubebuilder:validation:Optional
	AppFirewall []HTTPLoadbalancerAppFirewallParameters `json:"appFirewall,omitempty" tf:"app_firewall,omitempty"`

	// +kubebuilder:validation:Optional
	BlockedClients []BlockedClientsParameters `json:"blockedClients,omitempty" tf:"blocked_clients,omitempty"`

	// +kubebuilder:validation:Optional
	BotDefense []BotDefenseParameters `json:"botDefense,omitempty" tf:"bot_defense,omitempty"`

	// +kubebuilder:validation:Optional
	CaptchaChallenge []CaptchaChallengeParameters `json:"captchaChallenge,omitempty" tf:"captcha_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSideDefense []ClientSideDefenseParameters `json:"clientSideDefense,omitempty" tf:"client_side_defense,omitempty"`

	// +kubebuilder:validation:Optional
	CookieStickiness []CookieStickinessParameters `json:"cookieStickiness,omitempty" tf:"cookie_stickiness,omitempty"`

	// +kubebuilder:validation:Optional
	CorsPolicy []CorsPolicyParameters `json:"corsPolicy,omitempty" tf:"cors_policy,omitempty"`

	// +kubebuilder:validation:Optional
	DataGuardRules []DataGuardRulesParameters `json:"dataGuardRules,omitempty" tf:"data_guard_rules,omitempty"`

	// +kubebuilder:validation:Optional
	DdosMitigationRules []DdosMitigationRulesParameters `json:"ddosMitigationRules,omitempty" tf:"ddos_mitigation_rules,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultRoutePools []DefaultRoutePoolsParameters `json:"defaultRoutePools,omitempty" tf:"default_route_pools,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAPIDefinition *bool `json:"disableApiDefinition,omitempty" tf:"disable_api_definition,omitempty"`

	// +kubebuilder:validation:Optional
	DisableAPIDiscovery *bool `json:"disableApiDiscovery,omitempty" tf:"disable_api_discovery,omitempty"`

	// +kubebuilder:validation:Optional
	DisableBotDefense *bool `json:"disableBotDefense,omitempty" tf:"disable_bot_defense,omitempty"`

	// +kubebuilder:validation:Optional
	DisableClientSideDefense *bool `json:"disableClientSideDefense,omitempty" tf:"disable_client_side_defense,omitempty"`

	// +kubebuilder:validation:Optional
	DisableDdosDetection *bool `json:"disableDdosDetection,omitempty" tf:"disable_ddos_detection,omitempty"`

	// +kubebuilder:validation:Optional
	DisableIPReputation *bool `json:"disableIpReputation,omitempty" tf:"disable_ip_reputation,omitempty"`

	// +kubebuilder:validation:Optional
	DisableMaliciousUserDetection *bool `json:"disableMaliciousUserDetection,omitempty" tf:"disable_malicious_user_detection,omitempty"`

	// +kubebuilder:validation:Optional
	DisableRateLimit *bool `json:"disableRateLimit,omitempty" tf:"disable_rate_limit,omitempty"`

	// +kubebuilder:validation:Optional
	DisableTrustClientIPHeaders *bool `json:"disableTrustClientIpHeaders,omitempty" tf:"disable_trust_client_ip_headers,omitempty"`

	// +kubebuilder:validation:Optional
	DisableWaf *bool `json:"disableWaf,omitempty" tf:"disable_waf,omitempty"`

	// +kubebuilder:validation:Optional
	DoNotAdvertise *bool `json:"doNotAdvertise,omitempty" tf:"do_not_advertise,omitempty"`

	// +kubebuilder:validation:Required
	Domains []*string `json:"domains" tf:"domains,omitempty"`

	// +kubebuilder:validation:Optional
	EnableAPIDiscovery []EnableAPIDiscoveryParameters `json:"enableApiDiscovery,omitempty" tf:"enable_api_discovery,omitempty"`

	// +kubebuilder:validation:Optional
	EnableDdosDetection *bool `json:"enableDdosDetection,omitempty" tf:"enable_ddos_detection,omitempty"`

	// +kubebuilder:validation:Optional
	EnableIPReputation []EnableIPReputationParameters `json:"enableIpReputation,omitempty" tf:"enable_ip_reputation,omitempty"`

	// +kubebuilder:validation:Optional
	EnableMaliciousUserDetection *bool `json:"enableMaliciousUserDetection,omitempty" tf:"enable_malicious_user_detection,omitempty"`

	// +kubebuilder:validation:Optional
	EnableTrustClientIPHeaders []EnableTrustClientIPHeadersParameters `json:"enableTrustClientIpHeaders,omitempty" tf:"enable_trust_client_ip_headers,omitempty"`

	// +kubebuilder:validation:Optional
	HTTP []HTTPParameters `json:"http,omitempty" tf:"http,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPS []HTTPSParameters `json:"https,omitempty" tf:"https,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPSAutoCert []HTTPSAutoCertParameters `json:"httpsAutoCert,omitempty" tf:"https_auto_cert,omitempty"`

	// +kubebuilder:validation:Optional
	JsChallenge []JsChallengeParameters `json:"jsChallenge,omitempty" tf:"js_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	LeastActive *bool `json:"leastActive,omitempty" tf:"least_active,omitempty"`

	// +kubebuilder:validation:Optional
	MaliciousUserMitigation []MaliciousUserMitigationParameters `json:"maliciousUserMitigation,omitempty" tf:"malicious_user_mitigation,omitempty"`

	// +kubebuilder:validation:Optional
	MoreOption []MoreOptionParameters `json:"moreOption,omitempty" tf:"more_option,omitempty"`

	// +kubebuilder:validation:Optional
	MultiLBApp *bool `json:"multiLbApp,omitempty" tf:"multi_lb_app,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +crossplane:generate:reference:type=github.com/clhain/provider-volterra/apis/volterra/v1alpha1.VolterraNamespace
	// +crossplane:generate:reference:extractor=github.com/clhain/provider-volterra/config/common.ExtractResourceName()
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Reference to a VolterraNamespace in volterra to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceRef *v1.Reference `json:"namespaceRef,omitempty" tf:"-"`

	// Selector for a VolterraNamespace in volterra to populate namespace.
	// +kubebuilder:validation:Optional
	NamespaceSelector *v1.Selector `json:"namespaceSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	NoChallenge *bool `json:"noChallenge,omitempty" tf:"no_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	NoServicePolicies *bool `json:"noServicePolicies,omitempty" tf:"no_service_policies,omitempty"`

	// +kubebuilder:validation:Optional
	PolicyBasedChallenge []PolicyBasedChallengeParameters `json:"policyBasedChallenge,omitempty" tf:"policy_based_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	Random *bool `json:"random,omitempty" tf:"random,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimit []RateLimitParameters `json:"rateLimit,omitempty" tf:"rate_limit,omitempty"`

	// +kubebuilder:validation:Optional
	RingHash []RingHashParameters `json:"ringHash,omitempty" tf:"ring_hash,omitempty"`

	// +kubebuilder:validation:Optional
	RoundRobin *bool `json:"roundRobin,omitempty" tf:"round_robin,omitempty"`

	// +kubebuilder:validation:Optional
	Routes []RoutesParameters `json:"routes,omitempty" tf:"routes,omitempty"`

	// +kubebuilder:validation:Optional
	ServicePoliciesFromNamespace *bool `json:"servicePoliciesFromNamespace,omitempty" tf:"service_policies_from_namespace,omitempty"`

	// +kubebuilder:validation:Optional
	SingleLBApp []SingleLBAppParameters `json:"singleLbApp,omitempty" tf:"single_lb_app,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIPStickiness *bool `json:"sourceIpStickiness,omitempty" tf:"source_ip_stickiness,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedClients []TrustedClientsParameters `json:"trustedClients,omitempty" tf:"trusted_clients,omitempty"`

	// +kubebuilder:validation:Optional
	UserIDClientIP *bool `json:"userIdClientIp,omitempty" tf:"user_id_client_ip,omitempty"`

	// +kubebuilder:validation:Optional
	UserIdentification []UserIdentificationParameters `json:"userIdentification,omitempty" tf:"user_identification,omitempty"`

	// +kubebuilder:validation:Optional
	Waf []HTTPLoadbalancerWafParameters `json:"waf,omitempty" tf:"waf,omitempty"`

	// +kubebuilder:validation:Optional
	WafExclusionRules []WafExclusionRulesParameters `json:"wafExclusionRules,omitempty" tf:"waf_exclusion_rules,omitempty"`

	// +kubebuilder:validation:Optional
	WafRule []HTTPLoadbalancerWafRuleParameters `json:"wafRule,omitempty" tf:"waf_rule,omitempty"`
}

type HTTPLoadbalancerWafObservation struct {
}

type HTTPLoadbalancerWafParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type HTTPLoadbalancerWafRuleObservation struct {
}

type HTTPLoadbalancerWafRuleParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type HTTPMethodObservation struct {
}

type HTTPMethodParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`
}

type HTTPObservation struct {
}

type HTTPParameters struct {

	// +kubebuilder:validation:Optional
	DNSVolterraManaged *bool `json:"dnsVolterraManaged,omitempty" tf:"dns_volterra_managed,omitempty"`

	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type HTTPSAutoCertHeaderTransformationTypeObservation struct {
}

type HTTPSAutoCertHeaderTransformationTypeParameters struct {

	// +kubebuilder:validation:Optional
	DefaultHeaderTransformation *bool `json:"defaultHeaderTransformation,omitempty" tf:"default_header_transformation,omitempty"`

	// +kubebuilder:validation:Optional
	ProperCaseHeaderTransformation *bool `json:"properCaseHeaderTransformation,omitempty" tf:"proper_case_header_transformation,omitempty"`
}

type HTTPSAutoCertObservation struct {

	// +kubebuilder:validation:Optional
	UseMtls []HTTPSAutoCertUseMtlsObservation `json:"useMtls,omitempty" tf:"use_mtls,omitempty"`
}

type HTTPSAutoCertParameters struct {

	// +kubebuilder:validation:Optional
	AddHsts *bool `json:"addHsts,omitempty" tf:"add_hsts,omitempty"`

	// +kubebuilder:validation:Optional
	AppendServerName *string `json:"appendServerName,omitempty" tf:"append_server_name,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultHeader *bool `json:"defaultHeader,omitempty" tf:"default_header,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultLoadbalancer *bool `json:"defaultLoadbalancer,omitempty" tf:"default_loadbalancer,omitempty"`

	// +kubebuilder:validation:Optional
	DisablePathNormalize *bool `json:"disablePathNormalize,omitempty" tf:"disable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	EnablePathNormalize *bool `json:"enablePathNormalize,omitempty" tf:"enable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRedirect *bool `json:"httpRedirect,omitempty" tf:"http_redirect,omitempty"`

	// +kubebuilder:validation:Optional
	HeaderTransformationType []HTTPSAutoCertHeaderTransformationTypeParameters `json:"headerTransformationType,omitempty" tf:"header_transformation_type,omitempty"`

	// +kubebuilder:validation:Optional
	NoMtls *bool `json:"noMtls,omitempty" tf:"no_mtls,omitempty"`

	// +kubebuilder:validation:Optional
	NonDefaultLoadbalancer *bool `json:"nonDefaultLoadbalancer,omitempty" tf:"non_default_loadbalancer,omitempty"`

	// +kubebuilder:validation:Optional
	PassThrough *bool `json:"passThrough,omitempty" tf:"pass_through,omitempty"`

	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// +kubebuilder:validation:Optional
	TLSConfig []HTTPSAutoCertTLSConfigParameters `json:"tlsConfig,omitempty" tf:"tls_config,omitempty"`

	// +kubebuilder:validation:Optional
	UseMtls []HTTPSAutoCertUseMtlsParameters `json:"useMtls,omitempty" tf:"use_mtls,omitempty"`
}

type HTTPSAutoCertTLSConfigObservation struct {
}

type HTTPSAutoCertTLSConfigParameters struct {

	// +kubebuilder:validation:Optional
	CustomSecurity []TLSConfigCustomSecurityParameters `json:"customSecurity,omitempty" tf:"custom_security,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultSecurity *bool `json:"defaultSecurity,omitempty" tf:"default_security,omitempty"`

	// +kubebuilder:validation:Optional
	LowSecurity *bool `json:"lowSecurity,omitempty" tf:"low_security,omitempty"`

	// +kubebuilder:validation:Optional
	MediumSecurity *bool `json:"mediumSecurity,omitempty" tf:"medium_security,omitempty"`
}

type HTTPSAutoCertUseMtlsObservation struct {

	// +kubebuilder:validation:Optional
	Crl []UseMtlsCrlObservation `json:"crl,omitempty" tf:"crl,omitempty"`
}

type HTTPSAutoCertUseMtlsParameters struct {

	// +kubebuilder:validation:Optional
	Crl []UseMtlsCrlParameters `json:"crl,omitempty" tf:"crl,omitempty"`

	// +kubebuilder:validation:Optional
	NoCrl *bool `json:"noCrl,omitempty" tf:"no_crl,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedCAURL *string `json:"trustedCaUrl,omitempty" tf:"trusted_ca_url,omitempty"`
}

type HTTPSObservation struct {

	// +kubebuilder:validation:Optional
	TLSParameters []TLSParametersObservation `json:"tlsParameters,omitempty" tf:"tls_parameters,omitempty"`
}

type HTTPSParameters struct {

	// +kubebuilder:validation:Optional
	AddHsts *bool `json:"addHsts,omitempty" tf:"add_hsts,omitempty"`

	// +kubebuilder:validation:Optional
	AppendServerName *string `json:"appendServerName,omitempty" tf:"append_server_name,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultHeader *bool `json:"defaultHeader,omitempty" tf:"default_header,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultLoadbalancer *bool `json:"defaultLoadbalancer,omitempty" tf:"default_loadbalancer,omitempty"`

	// +kubebuilder:validation:Optional
	DisablePathNormalize *bool `json:"disablePathNormalize,omitempty" tf:"disable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	EnablePathNormalize *bool `json:"enablePathNormalize,omitempty" tf:"enable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPRedirect *bool `json:"httpRedirect,omitempty" tf:"http_redirect,omitempty"`

	// +kubebuilder:validation:Optional
	HeaderTransformationType []HeaderTransformationTypeParameters `json:"headerTransformationType,omitempty" tf:"header_transformation_type,omitempty"`

	// +kubebuilder:validation:Optional
	NonDefaultLoadbalancer *bool `json:"nonDefaultLoadbalancer,omitempty" tf:"non_default_loadbalancer,omitempty"`

	// +kubebuilder:validation:Optional
	PassThrough *bool `json:"passThrough,omitempty" tf:"pass_through,omitempty"`

	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`

	// +kubebuilder:validation:Optional
	TLSParameters []TLSParametersParameters `json:"tlsParameters,omitempty" tf:"tls_parameters,omitempty"`
}

type HashPolicyCookieObservation struct {
}

type HashPolicyCookieParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

type HashPolicyObservation struct {
}

type HashPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Cookie []HashPolicyCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP *bool `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Terminal *bool `json:"terminal,omitempty" tf:"terminal,omitempty"`
}

type HeaderItemObservation struct {
}

type HeaderItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type HeaderObservation struct {
}

type HeaderParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	Item []HeaderItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type HeaderTransformationTypeObservation struct {
}

type HeaderTransformationTypeParameters struct {

	// +kubebuilder:validation:Optional
	DefaultHeaderTransformation *bool `json:"defaultHeaderTransformation,omitempty" tf:"default_header_transformation,omitempty"`

	// +kubebuilder:validation:Optional
	ProperCaseHeaderTransformation *bool `json:"properCaseHeaderTransformation,omitempty" tf:"proper_case_header_transformation,omitempty"`
}

type HeadersItemObservation struct {
}

type HeadersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type HeadersObservation struct {
}

type HeadersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []HeadersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type IPAllowedListObservation struct {
}

type IPAllowedListParameters struct {

	// +kubebuilder:validation:Required
	Prefixes []*string `json:"prefixes" tf:"prefixes,omitempty"`
}

type IPMatcherObservation struct {

	// +kubebuilder:validation:Optional
	PrefixSets []PrefixSetsObservation `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type IPMatcherParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixSets []PrefixSetsParameters `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type IPMatcherPrefixSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type IPMatcherPrefixSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type IPPrefixListObservation struct {
}

type IPPrefixListParameters struct {

	// +kubebuilder:validation:Required
	IPPrefixes []*string `json:"ipPrefixes" tf:"ip_prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`
}

type IPThreatCategoryListObservation struct {
}

type IPThreatCategoryListParameters struct {

	// +kubebuilder:validation:Required
	IPThreatCategories []*string `json:"ipThreatCategories" tf:"ip_threat_categories,omitempty"`
}

type InlineRateLimiterObservation struct {
}

type InlineRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	RefUserID []RefUserIDParameters `json:"refUserId,omitempty" tf:"ref_user_id,omitempty"`

	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// +kubebuilder:validation:Optional
	UseHTTPLBUserID *bool `json:"useHttpLbUserId,omitempty" tf:"use_http_lb_user_id,omitempty"`
}

type InlineRateLimiterRefUserIDObservation struct {
}

type InlineRateLimiterRefUserIDParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type ItemObservation struct {
}

type ItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type JavascriptInfoObservation struct {
}

type JavascriptInfoParameters struct {

	// +kubebuilder:validation:Optional
	CachePrefix *string `json:"cachePrefix,omitempty" tf:"cache_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	CustomScriptURL *string `json:"customScriptUrl,omitempty" tf:"custom_script_url,omitempty"`

	// +kubebuilder:validation:Optional
	ScriptConfig *string `json:"scriptConfig,omitempty" tf:"script_config,omitempty"`
}

type JsChallengeObservation struct {
}

type JsChallengeParameters struct {

	// +kubebuilder:validation:Optional
	CookieExpiry *float64 `json:"cookieExpiry,omitempty" tf:"cookie_expiry,omitempty"`

	// +kubebuilder:validation:Optional
	CustomPage *string `json:"customPage,omitempty" tf:"custom_page,omitempty"`

	// +kubebuilder:validation:Optional
	JsScriptDelay *float64 `json:"jsScriptDelay,omitempty" tf:"js_script_delay,omitempty"`
}

type JsChallengeParametersObservation struct {
}

type JsChallengeParametersParameters struct {

	// +kubebuilder:validation:Optional
	CookieExpiry *float64 `json:"cookieExpiry,omitempty" tf:"cookie_expiry,omitempty"`

	// +kubebuilder:validation:Optional
	CustomPage *string `json:"customPage,omitempty" tf:"custom_page,omitempty"`

	// +kubebuilder:validation:Optional
	JsScriptDelay *float64 `json:"jsScriptDelay,omitempty" tf:"js_script_delay,omitempty"`
}

type JsInsertAllPagesExceptExcludeListDomainObservation struct {
}

type JsInsertAllPagesExceptExcludeListDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type JsInsertAllPagesExceptExcludeListMetadataObservation struct {
}

type JsInsertAllPagesExceptExcludeListMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type JsInsertAllPagesExceptExcludeListObservation struct {
}

type JsInsertAllPagesExceptExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []JsInsertAllPagesExceptExcludeListDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []JsInsertAllPagesExceptExcludeListMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []JsInsertAllPagesExceptExcludeListPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type JsInsertAllPagesExceptExcludeListPathObservation struct {
}

type JsInsertAllPagesExceptExcludeListPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type JsInsertAllPagesExceptObservation struct {
}

type JsInsertAllPagesExceptParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeList []ExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	JavascriptLocation *string `json:"javascriptLocation,omitempty" tf:"javascript_location,omitempty"`
}

type JsInsertAllPagesObservation struct {
}

type JsInsertAllPagesParameters struct {

	// +kubebuilder:validation:Optional
	JavascriptLocation *string `json:"javascriptLocation,omitempty" tf:"javascript_location,omitempty"`
}

type JsInsertionRulesExcludeListDomainObservation struct {
}

type JsInsertionRulesExcludeListDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type JsInsertionRulesExcludeListMetadataObservation struct {
}

type JsInsertionRulesExcludeListMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type JsInsertionRulesExcludeListObservation struct {
}

type JsInsertionRulesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []ExcludeListDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []JsInsertionRulesExcludeListMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []ExcludeListPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type JsInsertionRulesExcludeListPathObservation struct {
}

type JsInsertionRulesExcludeListPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type JsInsertionRulesObservation struct {
}

type JsInsertionRulesParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeList []JsInsertionRulesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []RulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type JsInsertionRulesRulesDomainObservation struct {
}

type JsInsertionRulesRulesDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type JsInsertionRulesRulesMetadataObservation struct {
}

type JsInsertionRulesRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type JsInsertionRulesRulesObservation struct {
}

type JsInsertionRulesRulesParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []JsInsertionRulesRulesDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []JsInsertionRulesRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []JsInsertionRulesRulesPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type JsInsertionRulesRulesPathObservation struct {
}

type JsInsertionRulesRulesPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type JwtObservation struct {
}

type JwtParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type MaliciousUserMitigationObservation struct {
}

type MaliciousUserMitigationParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type MetadataObservation struct {
}

type MetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MirrorPolicyObservation struct {
}

type MirrorPolicyParameters struct {

	// +kubebuilder:validation:Optional
	OriginPool []OriginPoolParameters `json:"originPool,omitempty" tf:"origin_pool,omitempty"`

	// +kubebuilder:validation:Optional
	Percent []PercentParameters `json:"percent,omitempty" tf:"percent,omitempty"`
}

type MitigationObservation struct {
}

type MitigationParameters struct {

	// +kubebuilder:validation:Optional
	Block []BlockParameters `json:"block,omitempty" tf:"block,omitempty"`

	// +kubebuilder:validation:Optional
	Flag []FlagParameters `json:"flag,omitempty" tf:"flag,omitempty"`

	// +kubebuilder:validation:Optional
	None *bool `json:"none,omitempty" tf:"none,omitempty"`

	// +kubebuilder:validation:Optional
	Redirect []RedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type MobileIdentifierHeadersItemObservation struct {
}

type MobileIdentifierHeadersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type MobileIdentifierHeadersObservation struct {
}

type MobileIdentifierHeadersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	Item []MobileIdentifierHeadersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MobileIdentifierObservation struct {
}

type MobileIdentifierParameters struct {

	// +kubebuilder:validation:Optional
	Headers []MobileIdentifierHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`
}

type MobileSdkConfigObservation struct {
}

type MobileSdkConfigParameters struct {

	// +kubebuilder:validation:Optional
	MobileIdentifier []MobileIdentifierParameters `json:"mobileIdentifier,omitempty" tf:"mobile_identifier,omitempty"`

	// +kubebuilder:validation:Optional
	ReloadHeaderName *string `json:"reloadHeaderName,omitempty" tf:"reload_header_name,omitempty"`
}

type MoreOptionObservation struct {
}

type MoreOptionParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalDomains []AdditionalDomainsParameters `json:"additionalDomains,omitempty" tf:"additional_domains,omitempty"`

	// +kubebuilder:validation:Optional
	BufferPolicy []BufferPolicyParameters `json:"bufferPolicy,omitempty" tf:"buffer_policy,omitempty"`

	// +kubebuilder:validation:Optional
	CompressionParams []CompressionParamsParameters `json:"compressionParams,omitempty" tf:"compression_params,omitempty"`

	// +kubebuilder:validation:Optional
	CustomErrors map[string]*string `json:"customErrors,omitempty" tf:"custom_errors,omitempty"`

	// +kubebuilder:validation:Optional
	DisableDefaultErrorPages *bool `json:"disableDefaultErrorPages,omitempty" tf:"disable_default_error_pages,omitempty"`

	// +kubebuilder:validation:Optional
	DisablePathNormalize *bool `json:"disablePathNormalize,omitempty" tf:"disable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	EnablePathNormalize *bool `json:"enablePathNormalize,omitempty" tf:"enable_path_normalize,omitempty"`

	// +kubebuilder:validation:Optional
	EnableStrictSniHostHeaderCheck *bool `json:"enableStrictSniHostHeaderCheck,omitempty" tf:"enable_strict_sni_host_header_check,omitempty"`

	// +kubebuilder:validation:Optional
	IdleTimeout *float64 `json:"idleTimeout,omitempty" tf:"idle_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	JavascriptInfo []JavascriptInfoParameters `json:"javascriptInfo,omitempty" tf:"javascript_info,omitempty"`

	// +kubebuilder:validation:Optional
	Jwt []JwtParameters `json:"jwt,omitempty" tf:"jwt,omitempty"`

	// +kubebuilder:validation:Optional
	MaxRequestHeaderSize *float64 `json:"maxRequestHeaderSize,omitempty" tf:"max_request_header_size,omitempty"`

	// +kubebuilder:validation:Optional
	RequestHeadersToAdd []RequestHeadersToAddParameters `json:"requestHeadersToAdd,omitempty" tf:"request_headers_to_add,omitempty"`

	// +kubebuilder:validation:Optional
	RequestHeadersToRemove []*string `json:"requestHeadersToRemove,omitempty" tf:"request_headers_to_remove,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeadersToAdd []ResponseHeadersToAddParameters `json:"responseHeadersToAdd,omitempty" tf:"response_headers_to_add,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseHeadersToRemove []*string `json:"responseHeadersToRemove,omitempty" tf:"response_headers_to_remove,omitempty"`
}

type OriginPoolObservation struct {
}

type OriginPoolParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type OriginPoolsClusterObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type OriginPoolsClusterParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type OriginPoolsObservation struct {

	// +kubebuilder:validation:Optional
	Cluster []OriginPoolsClusterObservation `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// +kubebuilder:validation:Optional
	Pool []OriginPoolsPoolObservation `json:"pool,omitempty" tf:"pool,omitempty"`
}

type OriginPoolsParameters struct {

	// +kubebuilder:validation:Optional
	Cluster []OriginPoolsClusterParameters `json:"cluster,omitempty" tf:"cluster,omitempty"`

	// +kubebuilder:validation:Optional
	EndpointSubsets map[string]*string `json:"endpointSubsets,omitempty" tf:"endpoint_subsets,omitempty"`

	// +kubebuilder:validation:Optional
	Pool []OriginPoolsPoolParameters `json:"pool,omitempty" tf:"pool,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type OriginPoolsPoolObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type OriginPoolsPoolParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type PathObservation struct {
}

type PathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type PercentObservation struct {
}

type PercentParameters struct {

	// +kubebuilder:validation:Optional
	Denominator *string `json:"denominator,omitempty" tf:"denominator,omitempty"`

	// +kubebuilder:validation:Optional
	Numerator *float64 `json:"numerator,omitempty" tf:"numerator,omitempty"`
}

type PoliciesObservation struct {
}

type PoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type PoliciesPoliciesObservation struct {
}

type PoliciesPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type PolicyBasedChallengeMaliciousUserMitigationObservation struct {
}

type PolicyBasedChallengeMaliciousUserMitigationParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type PolicyBasedChallengeObservation struct {

	// +kubebuilder:validation:Optional
	RuleList []RuleListObservation `json:"ruleList,omitempty" tf:"rule_list,omitempty"`
}

type PolicyBasedChallengeParameters struct {

	// +kubebuilder:validation:Optional
	AlwaysEnableCaptchaChallenge *bool `json:"alwaysEnableCaptchaChallenge,omitempty" tf:"always_enable_captcha_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	AlwaysEnableJsChallenge *bool `json:"alwaysEnableJsChallenge,omitempty" tf:"always_enable_js_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	CaptchaChallengeParameters []CaptchaChallengeParametersParameters `json:"captchaChallengeParameters,omitempty" tf:"captcha_challenge_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultCaptchaChallengeParameters *bool `json:"defaultCaptchaChallengeParameters,omitempty" tf:"default_captcha_challenge_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultJsChallengeParameters *bool `json:"defaultJsChallengeParameters,omitempty" tf:"default_js_challenge_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultMitigationSettings *bool `json:"defaultMitigationSettings,omitempty" tf:"default_mitigation_settings,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultTemporaryBlockingParameters *bool `json:"defaultTemporaryBlockingParameters,omitempty" tf:"default_temporary_blocking_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	JsChallengeParameters []JsChallengeParametersParameters `json:"jsChallengeParameters,omitempty" tf:"js_challenge_parameters,omitempty"`

	// +kubebuilder:validation:Optional
	MaliciousUserMitigation []PolicyBasedChallengeMaliciousUserMitigationParameters `json:"maliciousUserMitigation,omitempty" tf:"malicious_user_mitigation,omitempty"`

	// +kubebuilder:validation:Optional
	NoChallenge *bool `json:"noChallenge,omitempty" tf:"no_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	RuleList []RuleListParameters `json:"ruleList,omitempty" tf:"rule_list,omitempty"`

	// +kubebuilder:validation:Optional
	TemporaryUserBlocking []TemporaryUserBlockingParameters `json:"temporaryUserBlocking,omitempty" tf:"temporary_user_blocking,omitempty"`
}

type PolicyJsInsertAllPagesExceptObservation struct {
}

type PolicyJsInsertAllPagesExceptParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeList []JsInsertAllPagesExceptExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`
}

type PolicyJsInsertionRulesExcludeListMetadataObservation struct {
}

type PolicyJsInsertionRulesExcludeListMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PolicyJsInsertionRulesExcludeListObservation struct {
}

type PolicyJsInsertionRulesExcludeListParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []JsInsertionRulesExcludeListDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []PolicyJsInsertionRulesExcludeListMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []JsInsertionRulesExcludeListPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type PolicyJsInsertionRulesObservation struct {
}

type PolicyJsInsertionRulesParameters struct {

	// +kubebuilder:validation:Optional
	ExcludeList []PolicyJsInsertionRulesExcludeListParameters `json:"excludeList,omitempty" tf:"exclude_list,omitempty"`

	// +kubebuilder:validation:Optional
	Rules []JsInsertionRulesRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type PoolObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type PoolParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type PrefixSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type PrefixSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type ProtectedAppEndpointsDomainObservation struct {
}

type ProtectedAppEndpointsDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type ProtectedAppEndpointsMetadataObservation struct {
}

type ProtectedAppEndpointsMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ProtectedAppEndpointsObservation struct {
}

type ProtectedAppEndpointsParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []ProtectedAppEndpointsDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Required
	HTTPMethods []*string `json:"httpMethods" tf:"http_methods,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []ProtectedAppEndpointsMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Mitigation []MitigationParameters `json:"mitigation,omitempty" tf:"mitigation,omitempty"`

	// +kubebuilder:validation:Optional
	Mobile *bool `json:"mobile,omitempty" tf:"mobile,omitempty"`

	// +kubebuilder:validation:Optional
	Path []ProtectedAppEndpointsPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// +kubebuilder:validation:Optional
	Web *bool `json:"web,omitempty" tf:"web,omitempty"`

	// +kubebuilder:validation:Optional
	WebMobile []WebMobileParameters `json:"webMobile,omitempty" tf:"web_mobile,omitempty"`
}

type ProtectedAppEndpointsPathObservation struct {
}

type ProtectedAppEndpointsPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type PublicIPObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type PublicIPParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type QueryParamsItemObservation struct {
}

type QueryParamsItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type QueryParamsObservation struct {
}

type QueryParamsParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []QueryParamsItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type RateLimitCustomIPAllowedListObservation struct {
}

type RateLimitCustomIPAllowedListParameters struct {

	// +kubebuilder:validation:Optional
	RateLimiterAllowedPrefixes []CustomIPAllowedListRateLimiterAllowedPrefixesParameters `json:"rateLimiterAllowedPrefixes,omitempty" tf:"rate_limiter_allowed_prefixes,omitempty"`
}

type RateLimitIPAllowedListObservation struct {
}

type RateLimitIPAllowedListParameters struct {

	// +kubebuilder:validation:Required
	Prefixes []*string `json:"prefixes" tf:"prefixes,omitempty"`
}

type RateLimitObservation struct {
}

type RateLimitParameters struct {

	// +kubebuilder:validation:Optional
	CustomIPAllowedList []RateLimitCustomIPAllowedListParameters `json:"customIpAllowedList,omitempty" tf:"custom_ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	IPAllowedList []RateLimitIPAllowedListParameters `json:"ipAllowedList,omitempty" tf:"ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	NoIPAllowedList *bool `json:"noIpAllowedList,omitempty" tf:"no_ip_allowed_list,omitempty"`

	// +kubebuilder:validation:Optional
	NoPolicies *bool `json:"noPolicies,omitempty" tf:"no_policies,omitempty"`

	// +kubebuilder:validation:Optional
	Policies []RateLimitPoliciesParameters `json:"policies,omitempty" tf:"policies,omitempty"`

	// +kubebuilder:validation:Optional
	RateLimiter []RateLimiterParameters `json:"rateLimiter,omitempty" tf:"rate_limiter,omitempty"`
}

type RateLimitPoliciesObservation struct {
}

type RateLimitPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Policies []PoliciesPoliciesParameters `json:"policies,omitempty" tf:"policies,omitempty"`
}

type RateLimiterAllowedPrefixesObservation struct {
}

type RateLimiterAllowedPrefixesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type RateLimiterObservation struct {
}

type RateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	BurstMultiplier *float64 `json:"burstMultiplier,omitempty" tf:"burst_multiplier,omitempty"`

	// +kubebuilder:validation:Optional
	TotalNumber *float64 `json:"totalNumber,omitempty" tf:"total_number,omitempty"`

	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`
}

type RedirectObservation struct {
}

type RedirectParameters struct {

	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

type RedirectRouteHeadersObservation struct {
}

type RedirectRouteHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type RedirectRouteObservation struct {
}

type RedirectRouteParameters struct {

	// +kubebuilder:validation:Optional
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []RedirectRouteHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RedirectRoutePathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	RouteRedirect []RouteRedirectParameters `json:"routeRedirect,omitempty" tf:"route_redirect,omitempty"`
}

type RedirectRoutePathObservation struct {
}

type RedirectRoutePathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type RefRateLimiterObservation struct {
}

type RefRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type RefUserIDObservation struct {
}

type RefUserIDParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type RequestHeadersToAddObservation struct {
}

type RequestHeadersToAddParameters struct {

	// +kubebuilder:validation:Optional
	Append *bool `json:"append,omitempty" tf:"append,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SecretValue []SecretValueParameters `json:"secretValue,omitempty" tf:"secret_value,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RequestHeadersToAddSecretValueBlindfoldSecretInfoInternalObservation struct {
}

type RequestHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type RequestHeadersToAddSecretValueBlindfoldSecretInfoObservation struct {
}

type RequestHeadersToAddSecretValueBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type RequestHeadersToAddSecretValueClearSecretInfoObservation struct {
}

type RequestHeadersToAddSecretValueClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type RequestHeadersToAddSecretValueObservation struct {
}

type RequestHeadersToAddSecretValueParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []RequestHeadersToAddSecretValueBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []RequestHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []RequestHeadersToAddSecretValueClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []RequestHeadersToAddSecretValueVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []RequestHeadersToAddSecretValueWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type RequestHeadersToAddSecretValueVaultSecretInfoObservation struct {
}

type RequestHeadersToAddSecretValueVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type RequestHeadersToAddSecretValueWingmanSecretInfoObservation struct {
}

type RequestHeadersToAddSecretValueWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RequestMatcherCookieMatchersObservation struct {
}

type RequestMatcherCookieMatchersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []CookieMatchersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type RequestMatcherHeadersItemObservation struct {
}

type RequestMatcherHeadersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type RequestMatcherHeadersObservation struct {
}

type RequestMatcherHeadersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []RequestMatcherHeadersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type RequestMatcherObservation struct {
}

type RequestMatcherParameters struct {

	// +kubebuilder:validation:Optional
	CookieMatchers []CookieMatchersParameters `json:"cookieMatchers,omitempty" tf:"cookie_matchers,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []HeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	QueryParams []QueryParamsParameters `json:"queryParams,omitempty" tf:"query_params,omitempty"`
}

type RequestMatcherQueryParamsItemObservation struct {
}

type RequestMatcherQueryParamsItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type RequestMatcherQueryParamsObservation struct {
}

type RequestMatcherQueryParamsParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []RequestMatcherQueryParamsItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type ResponseHeadersToAddObservation struct {
}

type ResponseHeadersToAddParameters struct {

	// +kubebuilder:validation:Optional
	Append *bool `json:"append,omitempty" tf:"append,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	SecretValue []ResponseHeadersToAddSecretValueParameters `json:"secretValue,omitempty" tf:"secret_value,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalObservation struct {
}

type ResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type ResponseHeadersToAddSecretValueBlindfoldSecretInfoObservation struct {
}

type ResponseHeadersToAddSecretValueBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type ResponseHeadersToAddSecretValueClearSecretInfoObservation struct {
}

type ResponseHeadersToAddSecretValueClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type ResponseHeadersToAddSecretValueObservation struct {
}

type ResponseHeadersToAddSecretValueParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []ResponseHeadersToAddSecretValueBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []ResponseHeadersToAddSecretValueBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []ResponseHeadersToAddSecretValueClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []ResponseHeadersToAddSecretValueVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []ResponseHeadersToAddSecretValueWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type ResponseHeadersToAddSecretValueVaultSecretInfoObservation struct {
}

type ResponseHeadersToAddSecretValueVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type ResponseHeadersToAddSecretValueWingmanSecretInfoObservation struct {
}

type ResponseHeadersToAddSecretValueWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RetryPolicyObservation struct {
}

type RetryPolicyParameters struct {

	// +kubebuilder:validation:Optional
	BackOff []BackOffParameters `json:"backOff,omitempty" tf:"back_off,omitempty"`

	// +kubebuilder:validation:Optional
	NumRetries *float64 `json:"numRetries,omitempty" tf:"num_retries,omitempty"`

	// +kubebuilder:validation:Optional
	PerTryTimeout *float64 `json:"perTryTimeout,omitempty" tf:"per_try_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	RetriableStatusCodes []*float64 `json:"retriableStatusCodes,omitempty" tf:"retriable_status_codes,omitempty"`

	// +kubebuilder:validation:Optional
	RetryCondition []*string `json:"retryCondition,omitempty" tf:"retry_condition,omitempty"`

	// +kubebuilder:validation:Optional
	RetryOn *string `json:"retryOn,omitempty" tf:"retry_on,omitempty"`
}

type RingHashObservation struct {
}

type RingHashParameters struct {

	// +kubebuilder:validation:Optional
	HashPolicy []HashPolicyParameters `json:"hashPolicy,omitempty" tf:"hash_policy,omitempty"`
}

type RouteDirectResponseObservation struct {
}

type RouteDirectResponseParameters struct {

	// +kubebuilder:validation:Optional
	ResponseBody *string `json:"responseBody,omitempty" tf:"response_body,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseCode *float64 `json:"responseCode,omitempty" tf:"response_code,omitempty"`
}

type RouteRedirectObservation struct {
}

type RouteRedirectParameters struct {

	// +kubebuilder:validation:Optional
	AllParams *bool `json:"allParams,omitempty" tf:"all_params,omitempty"`

	// +kubebuilder:validation:Optional
	HostRedirect *string `json:"hostRedirect,omitempty" tf:"host_redirect,omitempty"`

	// +kubebuilder:validation:Optional
	PathRedirect *string `json:"pathRedirect,omitempty" tf:"path_redirect,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixRewrite *string `json:"prefixRewrite,omitempty" tf:"prefix_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	ProtoRedirect *string `json:"protoRedirect,omitempty" tf:"proto_redirect,omitempty"`

	// +kubebuilder:validation:Optional
	RemoveAllParams *bool `json:"removeAllParams,omitempty" tf:"remove_all_params,omitempty"`

	// +kubebuilder:validation:Optional
	ReplaceParams *string `json:"replaceParams,omitempty" tf:"replace_params,omitempty"`

	// +kubebuilder:validation:Optional
	ResponseCode *float64 `json:"responseCode,omitempty" tf:"response_code,omitempty"`

	// +kubebuilder:validation:Optional
	RetainAllParams *bool `json:"retainAllParams,omitempty" tf:"retain_all_params,omitempty"`

	// +kubebuilder:validation:Optional
	StripQueryParams []StripQueryParamsParameters `json:"stripQueryParams,omitempty" tf:"strip_query_params,omitempty"`
}

type RouteRefObservation struct {
}

type RouteRefParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type RoutesObservation struct {

	// +kubebuilder:validation:Optional
	SimpleRoute []SimpleRouteObservation `json:"simpleRoute,omitempty" tf:"simple_route,omitempty"`
}

type RoutesParameters struct {

	// +kubebuilder:validation:Optional
	CustomRouteObject []CustomRouteObjectParameters `json:"customRouteObject,omitempty" tf:"custom_route_object,omitempty"`

	// +kubebuilder:validation:Optional
	DirectResponseRoute []DirectResponseRouteParameters `json:"directResponseRoute,omitempty" tf:"direct_response_route,omitempty"`

	// +kubebuilder:validation:Optional
	RedirectRoute []RedirectRouteParameters `json:"redirectRoute,omitempty" tf:"redirect_route,omitempty"`

	// +kubebuilder:validation:Optional
	SimpleRoute []SimpleRouteParameters `json:"simpleRoute,omitempty" tf:"simple_route,omitempty"`
}

type RuleListObservation struct {

	// +kubebuilder:validation:Optional
	Rules []RuleListRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`
}

type RuleListParameters struct {

	// +kubebuilder:validation:Optional
	Rules []RuleListRulesParameters `json:"rules,omitempty" tf:"rules,omitempty"`
}

type RuleListRulesMetadataObservation struct {
}

type RuleListRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RuleListRulesObservation struct {

	// +kubebuilder:validation:Optional
	Spec []SpecObservation `json:"spec,omitempty" tf:"spec,omitempty"`
}

type RuleListRulesParameters struct {

	// +kubebuilder:validation:Optional
	Metadata []RuleListRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Spec []SpecParameters `json:"spec,omitempty" tf:"spec,omitempty"`
}

type RulesDomainObservation struct {
}

type RulesDomainParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type RulesMetadataObservation struct {
}

type RulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RulesObservation struct {
}

type RulesParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	Domain []RulesDomainParameters `json:"domain,omitempty" tf:"domain,omitempty"`

	// +kubebuilder:validation:Optional
	JavascriptLocation *string `json:"javascriptLocation,omitempty" tf:"javascript_location,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []RulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Path []RulesPathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type RulesPathObservation struct {
}

type RulesPathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type SecretValueBlindfoldSecretInfoInternalObservation struct {
}

type SecretValueBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type SecretValueBlindfoldSecretInfoObservation struct {
}

type SecretValueBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type SecretValueClearSecretInfoObservation struct {
}

type SecretValueClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type SecretValueObservation struct {
}

type SecretValueParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []SecretValueBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []SecretValueBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []SecretValueClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []SecretValueVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []SecretValueWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type SecretValueVaultSecretInfoObservation struct {
}

type SecretValueVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type SecretValueWingmanSecretInfoObservation struct {
}

type SecretValueWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ServerURLRulesInlineRateLimiterObservation struct {
}

type ServerURLRulesInlineRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	RefUserID []InlineRateLimiterRefUserIDParameters `json:"refUserId,omitempty" tf:"ref_user_id,omitempty"`

	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// +kubebuilder:validation:Optional
	Unit *string `json:"unit,omitempty" tf:"unit,omitempty"`

	// +kubebuilder:validation:Optional
	UseHTTPLBUserID *bool `json:"useHttpLbUserId,omitempty" tf:"use_http_lb_user_id,omitempty"`
}

type ServerURLRulesObservation struct {
}

type ServerURLRulesParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	BasePath *string `json:"basePath,omitempty" tf:"base_path,omitempty"`

	// +kubebuilder:validation:Optional
	InlineRateLimiter []ServerURLRulesInlineRateLimiterParameters `json:"inlineRateLimiter,omitempty" tf:"inline_rate_limiter,omitempty"`

	// +kubebuilder:validation:Optional
	RefRateLimiter []ServerURLRulesRefRateLimiterParameters `json:"refRateLimiter,omitempty" tf:"ref_rate_limiter,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificDomain *string `json:"specificDomain,omitempty" tf:"specific_domain,omitempty"`
}

type ServerURLRulesRefRateLimiterObservation struct {
}

type ServerURLRulesRefRateLimiterParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type SimpleRouteHeadersObservation struct {
}

type SimpleRouteHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type SimpleRouteObservation struct {

	// +kubebuilder:validation:Optional
	OriginPools []OriginPoolsObservation `json:"originPools,omitempty" tf:"origin_pools,omitempty"`
}

type SimpleRouteParameters struct {

	// +kubebuilder:validation:Optional
	AdvancedOptions []AdvancedOptionsParameters `json:"advancedOptions,omitempty" tf:"advanced_options,omitempty"`

	// +kubebuilder:validation:Optional
	AutoHostRewrite *bool `json:"autoHostRewrite,omitempty" tf:"auto_host_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	DisableHostRewrite *bool `json:"disableHostRewrite,omitempty" tf:"disable_host_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPMethod *string `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []SimpleRouteHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	HostRewrite *string `json:"hostRewrite,omitempty" tf:"host_rewrite,omitempty"`

	// +kubebuilder:validation:Optional
	OriginPools []OriginPoolsParameters `json:"originPools,omitempty" tf:"origin_pools,omitempty"`

	// +kubebuilder:validation:Optional
	Path []SimpleRoutePathParameters `json:"path,omitempty" tf:"path,omitempty"`
}

type SimpleRoutePathObservation struct {
}

type SimpleRoutePathParameters struct {

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type SingleLBAppObservation struct {
}

type SingleLBAppParameters struct {

	// +kubebuilder:validation:Optional
	DisableDdosDetection *bool `json:"disableDdosDetection,omitempty" tf:"disable_ddos_detection,omitempty"`

	// +kubebuilder:validation:Optional
	DisableDiscovery *bool `json:"disableDiscovery,omitempty" tf:"disable_discovery,omitempty"`

	// +kubebuilder:validation:Optional
	DisableMaliciousUserDetection *bool `json:"disableMaliciousUserDetection,omitempty" tf:"disable_malicious_user_detection,omitempty"`

	// +kubebuilder:validation:Optional
	EnableDdosDetection *bool `json:"enableDdosDetection,omitempty" tf:"enable_ddos_detection,omitempty"`

	// +kubebuilder:validation:Optional
	EnableDiscovery []EnableDiscoveryParameters `json:"enableDiscovery,omitempty" tf:"enable_discovery,omitempty"`

	// +kubebuilder:validation:Optional
	EnableMaliciousUserDetection *bool `json:"enableMaliciousUserDetection,omitempty" tf:"enable_malicious_user_detection,omitempty"`
}

type SiteObservation struct {

	// +kubebuilder:validation:Optional
	Site []SiteSiteObservation `json:"site,omitempty" tf:"site,omitempty"`
}

type SiteParameters struct {

	// +kubebuilder:validation:Optional
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// +kubebuilder:validation:Optional
	Site []SiteSiteParameters `json:"site,omitempty" tf:"site,omitempty"`
}

type SiteSiteObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type SiteSiteParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type SpecAsnListObservation struct {
}

type SpecAsnListParameters struct {

	// +kubebuilder:validation:Required
	AsNumbers []*float64 `json:"asNumbers" tf:"as_numbers,omitempty"`
}

type SpecAsnMatcherAsnSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type SpecAsnMatcherAsnSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type SpecAsnMatcherObservation struct {

	// +kubebuilder:validation:Optional
	AsnSets []SpecAsnMatcherAsnSetsObservation `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type SpecAsnMatcherParameters struct {

	// +kubebuilder:validation:Optional
	AsnSets []SpecAsnMatcherAsnSetsParameters `json:"asnSets,omitempty" tf:"asn_sets,omitempty"`
}

type SpecClientSelectorObservation struct {
}

type SpecClientSelectorParameters struct {

	// +kubebuilder:validation:Required
	Expressions []*string `json:"expressions" tf:"expressions,omitempty"`
}

type SpecCookieMatchersItemObservation struct {
}

type SpecCookieMatchersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type SpecCookieMatchersObservation struct {
}

type SpecCookieMatchersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []SpecCookieMatchersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type SpecHeadersItemObservation struct {
}

type SpecHeadersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type SpecHeadersObservation struct {
}

type SpecHeadersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []SpecHeadersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type SpecIPMatcherObservation struct {

	// +kubebuilder:validation:Optional
	PrefixSets []SpecIPMatcherPrefixSetsObservation `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type SpecIPMatcherParameters struct {

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixSets []SpecIPMatcherPrefixSetsParameters `json:"prefixSets,omitempty" tf:"prefix_sets,omitempty"`
}

type SpecIPMatcherPrefixSetsObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type SpecIPMatcherPrefixSetsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type SpecIPPrefixListObservation struct {
}

type SpecIPPrefixListParameters struct {

	// +kubebuilder:validation:Required
	IPPrefixes []*string `json:"ipPrefixes" tf:"ip_prefixes,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`
}

type SpecObservation struct {

	// +kubebuilder:validation:Optional
	AsnMatcher []SpecAsnMatcherObservation `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []SpecIPMatcherObservation `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`
}

type SpecParameters struct {

	// +kubebuilder:validation:Optional
	AnyAsn *bool `json:"anyAsn,omitempty" tf:"any_asn,omitempty"`

	// +kubebuilder:validation:Optional
	AnyClient *bool `json:"anyClient,omitempty" tf:"any_client,omitempty"`

	// +kubebuilder:validation:Optional
	AnyIP *bool `json:"anyIp,omitempty" tf:"any_ip,omitempty"`

	// +kubebuilder:validation:Optional
	ArgMatchers []ArgMatchersParameters `json:"argMatchers,omitempty" tf:"arg_matchers,omitempty"`

	// +kubebuilder:validation:Optional
	AsnList []SpecAsnListParameters `json:"asnList,omitempty" tf:"asn_list,omitempty"`

	// +kubebuilder:validation:Optional
	AsnMatcher []SpecAsnMatcherParameters `json:"asnMatcher,omitempty" tf:"asn_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	BodyMatcher []BodyMatcherParameters `json:"bodyMatcher,omitempty" tf:"body_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	ClientName *string `json:"clientName,omitempty" tf:"client_name,omitempty"`

	// +kubebuilder:validation:Optional
	ClientNameMatcher []ClientNameMatcherParameters `json:"clientNameMatcher,omitempty" tf:"client_name_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	ClientSelector []SpecClientSelectorParameters `json:"clientSelector,omitempty" tf:"client_selector,omitempty"`

	// +kubebuilder:validation:Optional
	CookieMatchers []SpecCookieMatchersParameters `json:"cookieMatchers,omitempty" tf:"cookie_matchers,omitempty"`

	// +kubebuilder:validation:Optional
	DisableChallenge *bool `json:"disableChallenge,omitempty" tf:"disable_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	DomainMatcher []DomainMatcherParameters `json:"domainMatcher,omitempty" tf:"domain_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	EnableCaptchaChallenge *bool `json:"enableCaptchaChallenge,omitempty" tf:"enable_captcha_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	EnableJavascriptChallenge *bool `json:"enableJavascriptChallenge,omitempty" tf:"enable_javascript_challenge,omitempty"`

	// +kubebuilder:validation:Optional
	ExpirationTimestamp *string `json:"expirationTimestamp,omitempty" tf:"expiration_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPMethod []HTTPMethodParameters `json:"httpMethod,omitempty" tf:"http_method,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []SpecHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	IPMatcher []SpecIPMatcherParameters `json:"ipMatcher,omitempty" tf:"ip_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefixList []SpecIPPrefixListParameters `json:"ipPrefixList,omitempty" tf:"ip_prefix_list,omitempty"`

	// +kubebuilder:validation:Optional
	Path []SpecPathParameters `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	QueryParams []SpecQueryParamsParameters `json:"queryParams,omitempty" tf:"query_params,omitempty"`

	// +kubebuilder:validation:Optional
	TLSFingerprintMatcher []SpecTLSFingerprintMatcherParameters `json:"tlsFingerprintMatcher,omitempty" tf:"tls_fingerprint_matcher,omitempty"`
}

type SpecPathObservation struct {
}

type SpecPathParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	PrefixValues []*string `json:"prefixValues,omitempty" tf:"prefix_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValues []*string `json:"suffixValues,omitempty" tf:"suffix_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type SpecQueryParamsItemObservation struct {
}

type SpecQueryParamsItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type SpecQueryParamsObservation struct {
}

type SpecQueryParamsParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatcher *bool `json:"invertMatcher,omitempty" tf:"invert_matcher,omitempty"`

	// +kubebuilder:validation:Optional
	Item []SpecQueryParamsItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`
}

type SpecTLSFingerprintMatcherObservation struct {
}

type SpecTLSFingerprintMatcherParameters struct {

	// +kubebuilder:validation:Optional
	Classes []*string `json:"classes,omitempty" tf:"classes,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludedValues []*string `json:"excludedValues,omitempty" tf:"excluded_values,omitempty"`
}

type SpecificHashPolicyHashPolicyCookieObservation struct {
}

type SpecificHashPolicyHashPolicyCookieParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// +kubebuilder:validation:Optional
	TTL *float64 `json:"ttl,omitempty" tf:"ttl,omitempty"`
}

type SpecificHashPolicyHashPolicyObservation struct {
}

type SpecificHashPolicyHashPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Cookie []SpecificHashPolicyHashPolicyCookieParameters `json:"cookie,omitempty" tf:"cookie,omitempty"`

	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP *bool `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Optional
	Terminal *bool `json:"terminal,omitempty" tf:"terminal,omitempty"`
}

type SpecificHashPolicyObservation struct {
}

type SpecificHashPolicyParameters struct {

	// +kubebuilder:validation:Optional
	HashPolicy []SpecificHashPolicyHashPolicyParameters `json:"hashPolicy,omitempty" tf:"hash_policy,omitempty"`
}

type StripQueryParamsObservation struct {
}

type StripQueryParamsParameters struct {

	// +kubebuilder:validation:Optional
	QueryParams []*string `json:"queryParams,omitempty" tf:"query_params,omitempty"`
}

type TLSCertificatesCustomHashAlgorithmsObservation struct {
}

type TLSCertificatesCustomHashAlgorithmsParameters struct {

	// +kubebuilder:validation:Required
	HashAlgorithms []*string `json:"hashAlgorithms" tf:"hash_algorithms,omitempty"`
}

type TLSCertificatesDisableOcspStaplingObservation struct {
}

type TLSCertificatesDisableOcspStaplingParameters struct {
}

type TLSCertificatesObservation struct {
}

type TLSCertificatesParameters struct {

	// +kubebuilder:validation:Optional
	CertificateURL *string `json:"certificateUrl,omitempty" tf:"certificate_url,omitempty"`

	// +kubebuilder:validation:Optional
	CustomHashAlgorithms []TLSCertificatesCustomHashAlgorithmsParameters `json:"customHashAlgorithms,omitempty" tf:"custom_hash_algorithms,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DisableOcspStapling []TLSCertificatesDisableOcspStaplingParameters `json:"disableOcspStapling,omitempty" tf:"disable_ocsp_stapling,omitempty"`

	// +kubebuilder:validation:Optional
	PrivateKey []TLSCertificatesPrivateKeyParameters `json:"privateKey,omitempty" tf:"private_key,omitempty"`

	// +kubebuilder:validation:Optional
	UseSystemDefaults []TLSCertificatesUseSystemDefaultsParameters `json:"useSystemDefaults,omitempty" tf:"use_system_defaults,omitempty"`
}

type TLSCertificatesPrivateKeyBlindfoldSecretInfoInternalObservation struct {
}

type TLSCertificatesPrivateKeyBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type TLSCertificatesPrivateKeyBlindfoldSecretInfoObservation struct {
}

type TLSCertificatesPrivateKeyBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type TLSCertificatesPrivateKeyClearSecretInfoObservation struct {
}

type TLSCertificatesPrivateKeyClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TLSCertificatesPrivateKeyObservation struct {
}

type TLSCertificatesPrivateKeyParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []TLSCertificatesPrivateKeyBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []TLSCertificatesPrivateKeyBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []TLSCertificatesPrivateKeyClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []TLSCertificatesPrivateKeyVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []TLSCertificatesPrivateKeyWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type TLSCertificatesPrivateKeyVaultSecretInfoObservation struct {
}

type TLSCertificatesPrivateKeyVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type TLSCertificatesPrivateKeyWingmanSecretInfoObservation struct {
}

type TLSCertificatesPrivateKeyWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TLSCertificatesUseSystemDefaultsObservation struct {
}

type TLSCertificatesUseSystemDefaultsParameters struct {
}

type TLSConfigCustomSecurityObservation struct {
}

type TLSConfigCustomSecurityParameters struct {

	// +kubebuilder:validation:Required
	CipherSuites []*string `json:"cipherSuites" tf:"cipher_suites,omitempty"`

	// +kubebuilder:validation:Optional
	MaxVersion *string `json:"maxVersion,omitempty" tf:"max_version,omitempty"`

	// +kubebuilder:validation:Optional
	MinVersion *string `json:"minVersion,omitempty" tf:"min_version,omitempty"`
}

type TLSConfigObservation struct {
}

type TLSConfigParameters struct {

	// +kubebuilder:validation:Optional
	CustomSecurity []CustomSecurityParameters `json:"customSecurity,omitempty" tf:"custom_security,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultSecurity *bool `json:"defaultSecurity,omitempty" tf:"default_security,omitempty"`

	// +kubebuilder:validation:Optional
	LowSecurity *bool `json:"lowSecurity,omitempty" tf:"low_security,omitempty"`

	// +kubebuilder:validation:Optional
	MediumSecurity *bool `json:"mediumSecurity,omitempty" tf:"medium_security,omitempty"`
}

type TLSFingerprintMatcherObservation struct {
}

type TLSFingerprintMatcherParameters struct {

	// +kubebuilder:validation:Optional
	Classes []*string `json:"classes,omitempty" tf:"classes,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	ExcludedValues []*string `json:"excludedValues,omitempty" tf:"excluded_values,omitempty"`
}

type TLSParametersObservation struct {

	// +kubebuilder:validation:Optional
	UseMtls []UseMtlsObservation `json:"useMtls,omitempty" tf:"use_mtls,omitempty"`
}

type TLSParametersParameters struct {

	// +kubebuilder:validation:Optional
	NoMtls *bool `json:"noMtls,omitempty" tf:"no_mtls,omitempty"`

	// +kubebuilder:validation:Optional
	TLSCertificates []TLSCertificatesParameters `json:"tlsCertificates,omitempty" tf:"tls_certificates,omitempty"`

	// +kubebuilder:validation:Optional
	TLSConfig []TLSConfigParameters `json:"tlsConfig,omitempty" tf:"tls_config,omitempty"`

	// +kubebuilder:validation:Optional
	UseMtls []UseMtlsParameters `json:"useMtls,omitempty" tf:"use_mtls,omitempty"`
}

type TemporaryUserBlockingObservation struct {
}

type TemporaryUserBlockingParameters struct {

	// +kubebuilder:validation:Optional
	CustomPage *string `json:"customPage,omitempty" tf:"custom_page,omitempty"`
}

type TrustedClientsHTTPHeaderHeadersObservation struct {
}

type TrustedClientsHTTPHeaderHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Exact *string `json:"exact,omitempty" tf:"exact,omitempty"`

	// +kubebuilder:validation:Optional
	InvertMatch *bool `json:"invertMatch,omitempty" tf:"invert_match,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Presence *bool `json:"presence,omitempty" tf:"presence,omitempty"`

	// +kubebuilder:validation:Optional
	Regex *string `json:"regex,omitempty" tf:"regex,omitempty"`
}

type TrustedClientsHTTPHeaderObservation struct {
}

type TrustedClientsHTTPHeaderParameters struct {

	// +kubebuilder:validation:Optional
	Headers []TrustedClientsHTTPHeaderHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`
}

type TrustedClientsMetadataObservation struct {
}

type TrustedClientsMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TrustedClientsObservation struct {
}

type TrustedClientsParameters struct {

	// +kubebuilder:validation:Optional
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// +kubebuilder:validation:Optional
	AsNumber *float64 `json:"asNumber,omitempty" tf:"as_number,omitempty"`

	// +kubebuilder:validation:Optional
	BotSkipProcessing *bool `json:"botSkipProcessing,omitempty" tf:"bot_skip_processing,omitempty"`

	// +kubebuilder:validation:Optional
	ExpirationTimestamp *string `json:"expirationTimestamp,omitempty" tf:"expiration_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	HTTPHeader []TrustedClientsHTTPHeaderParameters `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// +kubebuilder:validation:Optional
	IPPrefix *string `json:"ipPrefix,omitempty" tf:"ip_prefix,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []TrustedClientsMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	SkipProcessing *bool `json:"skipProcessing,omitempty" tf:"skip_processing,omitempty"`

	// +kubebuilder:validation:Optional
	UserIdentifier *string `json:"userIdentifier,omitempty" tf:"user_identifier,omitempty"`

	// +kubebuilder:validation:Optional
	WafSkipProcessing *bool `json:"wafSkipProcessing,omitempty" tf:"waf_skip_processing,omitempty"`
}

type UseMtlsCrlObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type UseMtlsCrlParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type UseMtlsObservation struct {

	// +kubebuilder:validation:Optional
	Crl []CrlObservation `json:"crl,omitempty" tf:"crl,omitempty"`
}

type UseMtlsParameters struct {

	// +kubebuilder:validation:Optional
	Crl []CrlParameters `json:"crl,omitempty" tf:"crl,omitempty"`

	// +kubebuilder:validation:Optional
	NoCrl *bool `json:"noCrl,omitempty" tf:"no_crl,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedCAURL *string `json:"trustedCaUrl,omitempty" tf:"trusted_ca_url,omitempty"`
}

type UserIdentificationObservation struct {
}

type UserIdentificationParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VirtualNetworkObservation struct {

	// +kubebuilder:validation:Optional
	VirtualNetwork []VirtualNetworkVirtualNetworkObservation `json:"virtualNetwork,omitempty" tf:"virtual_network,omitempty"`
}

type VirtualNetworkParameters struct {

	// +kubebuilder:validation:Optional
	DefaultVip *bool `json:"defaultVip,omitempty" tf:"default_vip,omitempty"`

	// +kubebuilder:validation:Optional
	SpecificVip *string `json:"specificVip,omitempty" tf:"specific_vip,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualNetwork []VirtualNetworkVirtualNetworkParameters `json:"virtualNetwork,omitempty" tf:"virtual_network,omitempty"`
}

type VirtualNetworkVirtualNetworkObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type VirtualNetworkVirtualNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VirtualSiteObservation struct {

	// +kubebuilder:validation:Optional
	VirtualSite []VirtualSiteVirtualSiteObservation `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`
}

type VirtualSiteParameters struct {

	// +kubebuilder:validation:Optional
	Network *string `json:"network,omitempty" tf:"network,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualSite []VirtualSiteVirtualSiteParameters `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`
}

type VirtualSiteVirtualSiteObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type VirtualSiteVirtualSiteParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type Vk8SServiceObservation struct {

	// +kubebuilder:validation:Optional
	Site []Vk8SServiceSiteObservation `json:"site,omitempty" tf:"site,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualSite []Vk8SServiceVirtualSiteObservation `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`
}

type Vk8SServiceParameters struct {

	// +kubebuilder:validation:Optional
	Site []Vk8SServiceSiteParameters `json:"site,omitempty" tf:"site,omitempty"`

	// +kubebuilder:validation:Optional
	VirtualSite []Vk8SServiceVirtualSiteParameters `json:"virtualSite,omitempty" tf:"virtual_site,omitempty"`
}

type Vk8SServiceSiteObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type Vk8SServiceSiteParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type Vk8SServiceVirtualSiteObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type Vk8SServiceVirtualSiteParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type WafExclusionRulesMetadataObservation struct {
}

type WafExclusionRulesMetadataParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type WafExclusionRulesObservation struct {
}

type WafExclusionRulesParameters struct {

	// +kubebuilder:validation:Optional
	AnyDomain *bool `json:"anyDomain,omitempty" tf:"any_domain,omitempty"`

	// +kubebuilder:validation:Optional
	AppFirewallDetectionControl []AppFirewallDetectionControlParameters `json:"appFirewallDetectionControl,omitempty" tf:"app_firewall_detection_control,omitempty"`

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Required
	ExcludeRuleIds []*string `json:"excludeRuleIds" tf:"exclude_rule_ids,omitempty"`

	// +kubebuilder:validation:Optional
	ExpirationTimestamp *string `json:"expirationTimestamp,omitempty" tf:"expiration_timestamp,omitempty"`

	// +kubebuilder:validation:Optional
	Metadata []WafExclusionRulesMetadataParameters `json:"metadata,omitempty" tf:"metadata,omitempty"`

	// +kubebuilder:validation:Optional
	Methods []*string `json:"methods,omitempty" tf:"methods,omitempty"`

	// +kubebuilder:validation:Optional
	PathRegex *string `json:"pathRegex,omitempty" tf:"path_regex,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type WafObservation struct {
}

type WafParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type WafRuleObservation struct {
}

type WafRuleParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type WebMobileHeadersItemObservation struct {
}

type WebMobileHeadersItemParameters struct {

	// +kubebuilder:validation:Optional
	ExactValues []*string `json:"exactValues,omitempty" tf:"exact_values,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValues []*string `json:"regexValues,omitempty" tf:"regex_values,omitempty"`

	// +kubebuilder:validation:Optional
	Transformers []*string `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type WebMobileHeadersObservation struct {
}

type WebMobileHeadersParameters struct {

	// +kubebuilder:validation:Optional
	CheckNotPresent *bool `json:"checkNotPresent,omitempty" tf:"check_not_present,omitempty"`

	// +kubebuilder:validation:Optional
	CheckPresent *bool `json:"checkPresent,omitempty" tf:"check_present,omitempty"`

	// +kubebuilder:validation:Optional
	Item []WebMobileHeadersItemParameters `json:"item,omitempty" tf:"item,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type WebMobileObservation struct {
}

type WebMobileParameters struct {

	// +kubebuilder:validation:Optional
	Header []HeaderParameters `json:"header,omitempty" tf:"header,omitempty"`

	// +kubebuilder:validation:Optional
	Headers []WebMobileHeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// +kubebuilder:validation:Optional
	MobileIdentifier *string `json:"mobileIdentifier,omitempty" tf:"mobile_identifier,omitempty"`
}

type WebSocketConfigObservation struct {
}

type WebSocketConfigParameters struct {

	// +kubebuilder:validation:Optional
	IdleTimeout *float64 `json:"idleTimeout,omitempty" tf:"idle_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConnectAttempts *float64 `json:"maxConnectAttempts,omitempty" tf:"max_connect_attempts,omitempty"`

	// +kubebuilder:validation:Optional
	UseWebsocket *bool `json:"useWebsocket,omitempty" tf:"use_websocket,omitempty"`
}

// HTTPLoadbalancerSpec defines the desired state of HTTPLoadbalancer
type HTTPLoadbalancerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HTTPLoadbalancerParameters `json:"forProvider"`
}

// HTTPLoadbalancerStatus defines the observed state of HTTPLoadbalancer.
type HTTPLoadbalancerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HTTPLoadbalancerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HTTPLoadbalancer is the Schema for the HTTPLoadbalancers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,volterra}
type HTTPLoadbalancer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HTTPLoadbalancerSpec   `json:"spec"`
	Status            HTTPLoadbalancerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HTTPLoadbalancerList contains a list of HTTPLoadbalancers
type HTTPLoadbalancerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HTTPLoadbalancer `json:"items"`
}

// Repository type metadata.
var (
	HTTPLoadbalancer_Kind             = "HTTPLoadbalancer"
	HTTPLoadbalancer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HTTPLoadbalancer_Kind}.String()
	HTTPLoadbalancer_KindAPIVersion   = HTTPLoadbalancer_Kind + "." + CRDGroupVersion.String()
	HTTPLoadbalancer_GroupVersionKind = CRDGroupVersion.WithKind(HTTPLoadbalancer_Kind)
)

func init() {
	SchemeBuilder.Register(&HTTPLoadbalancer{}, &HTTPLoadbalancerList{})
}
