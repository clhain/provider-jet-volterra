/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BlockedServicesBlockedSeviceObservation struct {
}

type BlockedServicesBlockedSeviceParameters struct {

	// +kubebuilder:validation:Optional
	DNS *bool `json:"dns,omitempty" tf:"dns,omitempty"`

	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// +kubebuilder:validation:Optional
	SSH *bool `json:"ssh,omitempty" tf:"ssh,omitempty"`

	// +kubebuilder:validation:Optional
	WebUserInterface *bool `json:"webUserInterface,omitempty" tf:"web_user_interface,omitempty"`
}

type CustomCertificatePrivateKeyBlindfoldSecretInfoInternalObservation struct {
}

type CustomCertificatePrivateKeyBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type CustomCertificatePrivateKeyBlindfoldSecretInfoObservation struct {
}

type CustomCertificatePrivateKeyBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type CustomCertificatePrivateKeyClearSecretInfoObservation struct {
}

type CustomCertificatePrivateKeyClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type CustomCertificatePrivateKeyVaultSecretInfoObservation struct {
}

type CustomCertificatePrivateKeyVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type CustomCertificatePrivateKeyWingmanSecretInfoObservation struct {
}

type CustomCertificatePrivateKeyWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type CustomStaticRouteNexthopNexthopAddressIPv4Observation struct {
}

type CustomStaticRouteNexthopNexthopAddressIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type CustomStaticRouteNexthopNexthopAddressIPv6Observation struct {
}

type CustomStaticRouteNexthopNexthopAddressIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type EnableForwardProxyTLSInterceptCustomCertificateCustomHashAlgorithmsObservation struct {
}

type EnableForwardProxyTLSInterceptCustomCertificateCustomHashAlgorithmsParameters struct {

	// +kubebuilder:validation:Required
	HashAlgorithms []*string `json:"hashAlgorithms" tf:"hash_algorithms,omitempty"`
}

type EnableForwardProxyTLSInterceptCustomCertificateDisableOcspStaplingObservation struct {
}

type EnableForwardProxyTLSInterceptCustomCertificateDisableOcspStaplingParameters struct {
}

type EnableForwardProxyTLSInterceptCustomCertificateObservation struct {
}

type EnableForwardProxyTLSInterceptCustomCertificateParameters struct {

	// +kubebuilder:validation:Optional
	CertificateURL *string `json:"certificateUrl,omitempty" tf:"certificate_url,omitempty"`

	// +kubebuilder:validation:Optional
	CustomHashAlgorithms []TLSInterceptCustomCertificateCustomHashAlgorithmsParameters `json:"customHashAlgorithms,omitempty" tf:"custom_hash_algorithms,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DisableOcspStapling []TLSInterceptCustomCertificateDisableOcspStaplingParameters `json:"disableOcspStapling,omitempty" tf:"disable_ocsp_stapling,omitempty"`

	// +kubebuilder:validation:Optional
	PrivateKey []TLSInterceptCustomCertificatePrivateKeyParameters `json:"privateKey,omitempty" tf:"private_key,omitempty"`

	// +kubebuilder:validation:Optional
	UseSystemDefaults []TLSInterceptCustomCertificateUseSystemDefaultsParameters `json:"useSystemDefaults,omitempty" tf:"use_system_defaults,omitempty"`
}

type EnableForwardProxyTLSInterceptCustomCertificatePrivateKeyObservation struct {
}

type EnableForwardProxyTLSInterceptCustomCertificatePrivateKeyParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []TLSInterceptCustomCertificatePrivateKeyClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []TLSInterceptCustomCertificatePrivateKeyVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []TLSInterceptCustomCertificatePrivateKeyWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type EnableForwardProxyTLSInterceptCustomCertificateUseSystemDefaultsObservation struct {
}

type EnableForwardProxyTLSInterceptCustomCertificateUseSystemDefaultsParameters struct {
}

type EnableForwardProxyTLSInterceptPolicyInterceptionRulesObservation struct {
}

type EnableForwardProxyTLSInterceptPolicyInterceptionRulesParameters struct {

	// +kubebuilder:validation:Optional
	DisableInterception *bool `json:"disableInterception,omitempty" tf:"disable_interception,omitempty"`

	// +kubebuilder:validation:Optional
	DomainMatch []TLSInterceptPolicyInterceptionRulesDomainMatchParameters `json:"domainMatch,omitempty" tf:"domain_match,omitempty"`

	// +kubebuilder:validation:Optional
	EnableInterception *bool `json:"enableInterception,omitempty" tf:"enable_interception,omitempty"`
}

type EnableForwardProxyTLSInterceptPolicyObservation struct {
}

type EnableForwardProxyTLSInterceptPolicyParameters struct {

	// +kubebuilder:validation:Optional
	InterceptionRules []TLSInterceptPolicyInterceptionRulesParameters `json:"interceptionRules,omitempty" tf:"interception_rules,omitempty"`
}

type ExistingNetworkObservation struct {
}

type ExistingNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ExistingSubnetObservation struct {
}

type ExistingSubnetParameters struct {

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type GCPVPCSiteBlockedServicesObservation struct {
}

type GCPVPCSiteBlockedServicesParameters struct {

	// +kubebuilder:validation:Optional
	BlockedSevice []BlockedServicesBlockedSeviceParameters `json:"blockedSevice,omitempty" tf:"blocked_sevice,omitempty"`
}

type GCPVPCSiteCloudCredentialsObservation struct {
}

type GCPVPCSiteCloudCredentialsParameters struct {

	// +crossplane:generate:reference:type=github.com/clhain/provider-volterra/apis/volterra/v1alpha1.CloudCredentials
	// +crossplane:generate:reference:extractor=github.com/clhain/provider-volterra/config/common.ExtractResourceName()
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a CloudCredentials in volterra to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a CloudCredentials in volterra to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type GCPVPCSiteCoordinatesObservation struct {
}

type GCPVPCSiteCoordinatesParameters struct {

	// +kubebuilder:validation:Optional
	Latitude *float64 `json:"latitude,omitempty" tf:"latitude,omitempty"`

	// +kubebuilder:validation:Optional
	Longitude *float64 `json:"longitude,omitempty" tf:"longitude,omitempty"`
}

type GCPVPCSiteIngressEgressGwObservation struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkList []IngressEgressGwGlobalNetworkListObservation `json:"globalNetworkList,omitempty" tf:"global_network_list,omitempty"`

	// +kubebuilder:validation:Optional
	InsideStaticRoutes []IngressEgressGwInsideStaticRoutesObservation `json:"insideStaticRoutes,omitempty" tf:"inside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideStaticRoutes []IngressEgressGwOutsideStaticRoutesObservation `json:"outsideStaticRoutes,omitempty" tf:"outside_static_routes,omitempty"`
}

type GCPVPCSiteIngressEgressGwParameters struct {

	// +kubebuilder:validation:Optional
	ActiveForwardProxyPolicies []IngressEgressGwActiveForwardProxyPoliciesParameters `json:"activeForwardProxyPolicies,omitempty" tf:"active_forward_proxy_policies,omitempty"`

	// +kubebuilder:validation:Optional
	ActiveNetworkPolicies []IngressEgressGwActiveNetworkPoliciesParameters `json:"activeNetworkPolicies,omitempty" tf:"active_network_policies,omitempty"`

	// +kubebuilder:validation:Optional
	DcClusterGroupInsideVn []IngressEgressGwDcClusterGroupInsideVnParameters `json:"dcClusterGroupInsideVn,omitempty" tf:"dc_cluster_group_inside_vn,omitempty"`

	// +kubebuilder:validation:Optional
	DcClusterGroupOutsideVn []IngressEgressGwDcClusterGroupOutsideVnParameters `json:"dcClusterGroupOutsideVn,omitempty" tf:"dc_cluster_group_outside_vn,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardProxyAllowAll *bool `json:"forwardProxyAllowAll,omitempty" tf:"forward_proxy_allow_all,omitempty"`

	// +kubebuilder:validation:Optional
	GCPCertifiedHw *string `json:"gcpCertifiedHw,omitempty" tf:"gcp_certified_hw,omitempty"`

	// +kubebuilder:validation:Required
	GCPZoneNames []*string `json:"gcpZoneNames" tf:"gcp_zone_names,omitempty"`

	// +kubebuilder:validation:Optional
	GlobalNetworkList []IngressEgressGwGlobalNetworkListParameters `json:"globalNetworkList,omitempty" tf:"global_network_list,omitempty"`

	// +kubebuilder:validation:Optional
	InsideNetwork []InsideNetworkParameters `json:"insideNetwork,omitempty" tf:"inside_network,omitempty"`

	// +kubebuilder:validation:Optional
	InsideStaticRoutes []IngressEgressGwInsideStaticRoutesParameters `json:"insideStaticRoutes,omitempty" tf:"inside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	InsideSubnet []IngressEgressGwInsideSubnetParameters `json:"insideSubnet,omitempty" tf:"inside_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NoDcClusterGroup *bool `json:"noDcClusterGroup,omitempty" tf:"no_dc_cluster_group,omitempty"`

	// +kubebuilder:validation:Optional
	NoForwardProxy *bool `json:"noForwardProxy,omitempty" tf:"no_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	NoGlobalNetwork *bool `json:"noGlobalNetwork,omitempty" tf:"no_global_network,omitempty"`

	// +kubebuilder:validation:Optional
	NoInsideStaticRoutes *bool `json:"noInsideStaticRoutes,omitempty" tf:"no_inside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	NoNetworkPolicy *bool `json:"noNetworkPolicy,omitempty" tf:"no_network_policy,omitempty"`

	// +kubebuilder:validation:Optional
	NoOutsideStaticRoutes *bool `json:"noOutsideStaticRoutes,omitempty" tf:"no_outside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	NodeNumber *float64 `json:"nodeNumber,omitempty" tf:"node_number,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideNetwork []OutsideNetworkParameters `json:"outsideNetwork,omitempty" tf:"outside_network,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideStaticRoutes []IngressEgressGwOutsideStaticRoutesParameters `json:"outsideStaticRoutes,omitempty" tf:"outside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideSubnet []IngressEgressGwOutsideSubnetParameters `json:"outsideSubnet,omitempty" tf:"outside_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	SmConnectionPublicIP *bool `json:"smConnectionPublicIp,omitempty" tf:"sm_connection_public_ip,omitempty"`

	// +kubebuilder:validation:Optional
	SmConnectionPvtIP *bool `json:"smConnectionPvtIp,omitempty" tf:"sm_connection_pvt_ip,omitempty"`
}

type GCPVPCSiteIngressGwObservation struct {
}

type GCPVPCSiteIngressGwParameters struct {

	// +kubebuilder:validation:Optional
	GCPCertifiedHw *string `json:"gcpCertifiedHw,omitempty" tf:"gcp_certified_hw,omitempty"`

	// +kubebuilder:validation:Required
	GCPZoneNames []*string `json:"gcpZoneNames" tf:"gcp_zone_names,omitempty"`

	// +kubebuilder:validation:Optional
	LocalNetwork []LocalNetworkParameters `json:"localNetwork,omitempty" tf:"local_network,omitempty"`

	// +kubebuilder:validation:Optional
	LocalSubnet []IngressGwLocalSubnetParameters `json:"localSubnet,omitempty" tf:"local_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NodeNumber *float64 `json:"nodeNumber,omitempty" tf:"node_number,omitempty"`
}

type GCPVPCSiteLogReceiverObservation struct {
}

type GCPVPCSiteLogReceiverParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type GCPVPCSiteObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:Optional
	IngressEgressGw []GCPVPCSiteIngressEgressGwObservation `json:"ingressEgressGw,omitempty" tf:"ingress_egress_gw,omitempty"`

	// +kubebuilder:validation:Optional
	VoltstackCluster []GCPVPCSiteVoltstackClusterObservation `json:"voltstackCluster,omitempty" tf:"voltstack_cluster,omitempty"`
}

type GCPVPCSiteOfflineSurvivabilityModeObservation struct {
}

type GCPVPCSiteOfflineSurvivabilityModeParameters struct {

	// +kubebuilder:validation:Optional
	EnableOfflineSurvivabilityMode *bool `json:"enableOfflineSurvivabilityMode,omitempty" tf:"enable_offline_survivability_mode,omitempty"`

	// +kubebuilder:validation:Optional
	NoOfflineSurvivabilityMode *bool `json:"noOfflineSurvivabilityMode,omitempty" tf:"no_offline_survivability_mode,omitempty"`
}

type GCPVPCSiteOsObservation struct {
}

type GCPVPCSiteOsParameters struct {

	// +kubebuilder:validation:Optional
	DefaultOsVersion *bool `json:"defaultOsVersion,omitempty" tf:"default_os_version,omitempty"`

	// +kubebuilder:validation:Optional
	OperatingSystemVersion *string `json:"operatingSystemVersion,omitempty" tf:"operating_system_version,omitempty"`
}

type GCPVPCSiteParameters struct {

	// +kubebuilder:validation:Optional
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// +kubebuilder:validation:Optional
	Annotations map[string]*string `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// +kubebuilder:validation:Optional
	BlockedServices []GCPVPCSiteBlockedServicesParameters `json:"blockedServices,omitempty" tf:"blocked_services,omitempty"`

	// +kubebuilder:validation:Optional
	CloudCredentials []GCPVPCSiteCloudCredentialsParameters `json:"cloudCredentials,omitempty" tf:"cloud_credentials,omitempty"`

	// +kubebuilder:validation:Optional
	Coordinates []GCPVPCSiteCoordinatesParameters `json:"coordinates,omitempty" tf:"coordinates,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultBlockedServices *bool `json:"defaultBlockedServices,omitempty" tf:"default_blocked_services,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// +kubebuilder:validation:Optional
	DiskSize *float64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// +kubebuilder:validation:Optional
	GCPLabels map[string]*string `json:"gcpLabels,omitempty" tf:"gcp_labels,omitempty"`

	// +kubebuilder:validation:Required
	GCPRegion *string `json:"gcpRegion" tf:"gcp_region,omitempty"`

	// +kubebuilder:validation:Optional
	IngressEgressGw []GCPVPCSiteIngressEgressGwParameters `json:"ingressEgressGw,omitempty" tf:"ingress_egress_gw,omitempty"`

	// +kubebuilder:validation:Optional
	IngressGw []GCPVPCSiteIngressGwParameters `json:"ingressGw,omitempty" tf:"ingress_gw,omitempty"`

	// +kubebuilder:validation:Required
	InstanceType *string `json:"instanceType" tf:"instance_type,omitempty"`

	// +kubebuilder:validation:Optional
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	LogReceiver []GCPVPCSiteLogReceiverParameters `json:"logReceiver,omitempty" tf:"log_receiver,omitempty"`

	// +kubebuilder:validation:Optional
	LogsStreamingDisabled *bool `json:"logsStreamingDisabled,omitempty" tf:"logs_streaming_disabled,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	NodesPerAz *float64 `json:"nodesPerAz,omitempty" tf:"nodes_per_az,omitempty"`

	// +kubebuilder:validation:Optional
	OfflineSurvivabilityMode []GCPVPCSiteOfflineSurvivabilityModeParameters `json:"offlineSurvivabilityMode,omitempty" tf:"offline_survivability_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Os []GCPVPCSiteOsParameters `json:"os,omitempty" tf:"os,omitempty"`

	// +kubebuilder:validation:Optional
	SSHKey *string `json:"sshKey,omitempty" tf:"ssh_key,omitempty"`

	// +kubebuilder:validation:Optional
	SiteLocalControlPlane []GCPVPCSiteSiteLocalControlPlaneParameters `json:"siteLocalControlPlane,omitempty" tf:"site_local_control_plane,omitempty"`

	// +kubebuilder:validation:Optional
	Sw []GCPVPCSiteSwParameters `json:"sw,omitempty" tf:"sw,omitempty"`

	// +kubebuilder:validation:Optional
	VoltstackCluster []GCPVPCSiteVoltstackClusterParameters `json:"voltstackCluster,omitempty" tf:"voltstack_cluster,omitempty"`
}

type GCPVPCSiteSiteLocalControlPlaneObservation struct {
}

type GCPVPCSiteSiteLocalControlPlaneParameters struct {

	// +kubebuilder:validation:Optional
	DefaultLocalControlPlane *bool `json:"defaultLocalControlPlane,omitempty" tf:"default_local_control_plane,omitempty"`

	// +kubebuilder:validation:Optional
	NoLocalControlPlane *bool `json:"noLocalControlPlane,omitempty" tf:"no_local_control_plane,omitempty"`
}

type GCPVPCSiteSwObservation struct {
}

type GCPVPCSiteSwParameters struct {

	// +kubebuilder:validation:Optional
	DefaultSwVersion *bool `json:"defaultSwVersion,omitempty" tf:"default_sw_version,omitempty"`

	// +kubebuilder:validation:Optional
	VolterraSoftwareVersion *string `json:"volterraSoftwareVersion,omitempty" tf:"volterra_software_version,omitempty"`
}

type GCPVPCSiteVoltstackClusterActiveForwardProxyPoliciesObservation struct {
}

type GCPVPCSiteVoltstackClusterActiveForwardProxyPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	ForwardProxyPolicies []VoltstackClusterActiveForwardProxyPoliciesForwardProxyPoliciesParameters `json:"forwardProxyPolicies,omitempty" tf:"forward_proxy_policies,omitempty"`
}

type GCPVPCSiteVoltstackClusterActiveNetworkPoliciesObservation struct {
}

type GCPVPCSiteVoltstackClusterActiveNetworkPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	NetworkPolicies []VoltstackClusterActiveNetworkPoliciesNetworkPoliciesParameters `json:"networkPolicies,omitempty" tf:"network_policies,omitempty"`
}

type GCPVPCSiteVoltstackClusterGlobalNetworkListObservation struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkConnections []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsObservation `json:"globalNetworkConnections,omitempty" tf:"global_network_connections,omitempty"`
}

type GCPVPCSiteVoltstackClusterGlobalNetworkListParameters struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkConnections []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsParameters `json:"globalNetworkConnections,omitempty" tf:"global_network_connections,omitempty"`
}

type GCPVPCSiteVoltstackClusterObservation struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkList []GCPVPCSiteVoltstackClusterGlobalNetworkListObservation `json:"globalNetworkList,omitempty" tf:"global_network_list,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideStaticRoutes []GCPVPCSiteVoltstackClusterOutsideStaticRoutesObservation `json:"outsideStaticRoutes,omitempty" tf:"outside_static_routes,omitempty"`
}

type GCPVPCSiteVoltstackClusterOutsideStaticRoutesObservation struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []GCPVPCSiteVoltstackClusterOutsideStaticRoutesStaticRouteListObservation `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type GCPVPCSiteVoltstackClusterOutsideStaticRoutesParameters struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []GCPVPCSiteVoltstackClusterOutsideStaticRoutesStaticRouteListParameters `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type GCPVPCSiteVoltstackClusterOutsideStaticRoutesStaticRouteListObservation struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteObservation `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`
}

type GCPVPCSiteVoltstackClusterOutsideStaticRoutesStaticRouteListParameters struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteParameters `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`

	// +kubebuilder:validation:Optional
	SimpleStaticRoute *string `json:"simpleStaticRoute,omitempty" tf:"simple_static_route,omitempty"`
}

type GCPVPCSiteVoltstackClusterParameters struct {

	// +kubebuilder:validation:Optional
	ActiveForwardProxyPolicies []GCPVPCSiteVoltstackClusterActiveForwardProxyPoliciesParameters `json:"activeForwardProxyPolicies,omitempty" tf:"active_forward_proxy_policies,omitempty"`

	// +kubebuilder:validation:Optional
	ActiveNetworkPolicies []GCPVPCSiteVoltstackClusterActiveNetworkPoliciesParameters `json:"activeNetworkPolicies,omitempty" tf:"active_network_policies,omitempty"`

	// +kubebuilder:validation:Optional
	DcClusterGroup []VoltstackClusterDcClusterGroupParameters `json:"dcClusterGroup,omitempty" tf:"dc_cluster_group,omitempty"`

	// +kubebuilder:validation:Optional
	DefaultStorage *bool `json:"defaultStorage,omitempty" tf:"default_storage,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardProxyAllowAll *bool `json:"forwardProxyAllowAll,omitempty" tf:"forward_proxy_allow_all,omitempty"`

	// +kubebuilder:validation:Optional
	GCPCertifiedHw *string `json:"gcpCertifiedHw,omitempty" tf:"gcp_certified_hw,omitempty"`

	// +kubebuilder:validation:Required
	GCPZoneNames []*string `json:"gcpZoneNames" tf:"gcp_zone_names,omitempty"`

	// +kubebuilder:validation:Optional
	GlobalNetworkList []GCPVPCSiteVoltstackClusterGlobalNetworkListParameters `json:"globalNetworkList,omitempty" tf:"global_network_list,omitempty"`

	// +kubebuilder:validation:Optional
	K8SCluster []VoltstackClusterK8SClusterParameters `json:"k8sCluster,omitempty" tf:"k8s_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	NoDcClusterGroup *bool `json:"noDcClusterGroup,omitempty" tf:"no_dc_cluster_group,omitempty"`

	// +kubebuilder:validation:Optional
	NoForwardProxy *bool `json:"noForwardProxy,omitempty" tf:"no_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	NoGlobalNetwork *bool `json:"noGlobalNetwork,omitempty" tf:"no_global_network,omitempty"`

	// +kubebuilder:validation:Optional
	NoK8SCluster *bool `json:"noK8SCluster,omitempty" tf:"no_k8s_cluster,omitempty"`

	// +kubebuilder:validation:Optional
	NoNetworkPolicy *bool `json:"noNetworkPolicy,omitempty" tf:"no_network_policy,omitempty"`

	// +kubebuilder:validation:Optional
	NoOutsideStaticRoutes *bool `json:"noOutsideStaticRoutes,omitempty" tf:"no_outside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	NodeNumber *float64 `json:"nodeNumber,omitempty" tf:"node_number,omitempty"`

	// +kubebuilder:validation:Optional
	OutsideStaticRoutes []GCPVPCSiteVoltstackClusterOutsideStaticRoutesParameters `json:"outsideStaticRoutes,omitempty" tf:"outside_static_routes,omitempty"`

	// +kubebuilder:validation:Optional
	SiteLocalNetwork []SiteLocalNetworkParameters `json:"siteLocalNetwork,omitempty" tf:"site_local_network,omitempty"`

	// +kubebuilder:validation:Optional
	SiteLocalSubnet []SiteLocalSubnetParameters `json:"siteLocalSubnet,omitempty" tf:"site_local_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	SmConnectionPublicIP *bool `json:"smConnectionPublicIp,omitempty" tf:"sm_connection_public_ip,omitempty"`

	// +kubebuilder:validation:Optional
	SmConnectionPvtIP *bool `json:"smConnectionPvtIp,omitempty" tf:"sm_connection_pvt_ip,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClassList []VoltstackClusterStorageClassListParameters `json:"storageClassList,omitempty" tf:"storage_class_list,omitempty"`
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptCustomCertificateObservation struct {
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptCustomCertificateParameters struct {

	// +kubebuilder:validation:Optional
	CertificateURL *string `json:"certificateUrl,omitempty" tf:"certificate_url,omitempty"`

	// +kubebuilder:validation:Optional
	CustomHashAlgorithms []EnableForwardProxyTLSInterceptCustomCertificateCustomHashAlgorithmsParameters `json:"customHashAlgorithms,omitempty" tf:"custom_hash_algorithms,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DisableOcspStapling []EnableForwardProxyTLSInterceptCustomCertificateDisableOcspStaplingParameters `json:"disableOcspStapling,omitempty" tf:"disable_ocsp_stapling,omitempty"`

	// +kubebuilder:validation:Optional
	PrivateKey []EnableForwardProxyTLSInterceptCustomCertificatePrivateKeyParameters `json:"privateKey,omitempty" tf:"private_key,omitempty"`

	// +kubebuilder:validation:Optional
	UseSystemDefaults []EnableForwardProxyTLSInterceptCustomCertificateUseSystemDefaultsParameters `json:"useSystemDefaults,omitempty" tf:"use_system_defaults,omitempty"`
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptObservation struct {
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptParameters struct {

	// +kubebuilder:validation:Optional
	CustomCertificate []EnableForwardProxyTLSInterceptCustomCertificateParameters `json:"customCertificate,omitempty" tf:"custom_certificate,omitempty"`

	// +kubebuilder:validation:Optional
	EnableForAllDomains *bool `json:"enableForAllDomains,omitempty" tf:"enable_for_all_domains,omitempty"`

	// +kubebuilder:validation:Optional
	Policy []EnableForwardProxyTLSInterceptPolicyParameters `json:"policy,omitempty" tf:"policy,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedCAURL *string `json:"trustedCaUrl,omitempty" tf:"trusted_ca_url,omitempty"`

	// +kubebuilder:validation:Optional
	VolterraCertificate *bool `json:"volterraCertificate,omitempty" tf:"volterra_certificate,omitempty"`

	// +kubebuilder:validation:Optional
	VolterraTrustedCA *bool `json:"volterraTrustedCa,omitempty" tf:"volterra_trusted_ca,omitempty"`
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptPolicyObservation struct {
}

type GlobalNetworkConnectionsEnableForwardProxyTLSInterceptPolicyParameters struct {

	// +kubebuilder:validation:Optional
	InterceptionRules []EnableForwardProxyTLSInterceptPolicyInterceptionRulesParameters `json:"interceptionRules,omitempty" tf:"interception_rules,omitempty"`
}

type GlobalNetworkConnectionsSliToGlobalDrGlobalVnObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type GlobalNetworkConnectionsSliToGlobalDrGlobalVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyObservation struct {
}

type GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyParameters struct {

	// +kubebuilder:validation:Optional
	ConnectionTimeout *float64 `json:"connectionTimeout,omitempty" tf:"connection_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConnectAttempts *float64 `json:"maxConnectAttempts,omitempty" tf:"max_connect_attempts,omitempty"`

	// +kubebuilder:validation:Optional
	NoInterception *bool `json:"noInterception,omitempty" tf:"no_interception,omitempty"`

	// +kubebuilder:validation:Optional
	TLSIntercept []GlobalNetworkConnectionsEnableForwardProxyTLSInterceptParameters `json:"tlsIntercept,omitempty" tf:"tls_intercept,omitempty"`

	// +kubebuilder:validation:Optional
	WhiteListedPorts []*float64 `json:"whiteListedPorts,omitempty" tf:"white_listed_ports,omitempty"`

	// +kubebuilder:validation:Optional
	WhiteListedPrefixes []*string `json:"whiteListedPrefixes,omitempty" tf:"white_listed_prefixes,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyTLSInterceptObservation struct {
}

type GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyTLSInterceptParameters struct {

	// +kubebuilder:validation:Optional
	CustomCertificate []GlobalNetworkConnectionsEnableForwardProxyTLSInterceptCustomCertificateParameters `json:"customCertificate,omitempty" tf:"custom_certificate,omitempty"`

	// +kubebuilder:validation:Optional
	EnableForAllDomains *bool `json:"enableForAllDomains,omitempty" tf:"enable_for_all_domains,omitempty"`

	// +kubebuilder:validation:Optional
	Policy []GlobalNetworkConnectionsEnableForwardProxyTLSInterceptPolicyParameters `json:"policy,omitempty" tf:"policy,omitempty"`

	// +kubebuilder:validation:Optional
	TrustedCAURL *string `json:"trustedCaUrl,omitempty" tf:"trusted_ca_url,omitempty"`

	// +kubebuilder:validation:Optional
	VolterraCertificate *bool `json:"volterraCertificate,omitempty" tf:"volterra_certificate,omitempty"`

	// +kubebuilder:validation:Optional
	VolterraTrustedCA *bool `json:"volterraTrustedCa,omitempty" tf:"volterra_trusted_ca,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrObservation struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnObservation `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrParameters struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnParameters `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrGlobalVnObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrGlobalVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrObservation struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkConnectionsSliToGlobalDrGlobalVnObservation `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrParameters struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkConnectionsSliToGlobalDrGlobalVnParameters `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type IngressEgressGwActiveForwardProxyPoliciesForwardProxyPoliciesObservation struct {
}

type IngressEgressGwActiveForwardProxyPoliciesForwardProxyPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type IngressEgressGwActiveForwardProxyPoliciesObservation struct {
}

type IngressEgressGwActiveForwardProxyPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	ForwardProxyPolicies []IngressEgressGwActiveForwardProxyPoliciesForwardProxyPoliciesParameters `json:"forwardProxyPolicies,omitempty" tf:"forward_proxy_policies,omitempty"`
}

type IngressEgressGwActiveNetworkPoliciesNetworkPoliciesObservation struct {
}

type IngressEgressGwActiveNetworkPoliciesNetworkPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type IngressEgressGwActiveNetworkPoliciesObservation struct {
}

type IngressEgressGwActiveNetworkPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	NetworkPolicies []IngressEgressGwActiveNetworkPoliciesNetworkPoliciesParameters `json:"networkPolicies,omitempty" tf:"network_policies,omitempty"`
}

type IngressEgressGwDcClusterGroupInsideVnObservation struct {
}

type IngressEgressGwDcClusterGroupInsideVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type IngressEgressGwDcClusterGroupOutsideVnObservation struct {
}

type IngressEgressGwDcClusterGroupOutsideVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type IngressEgressGwGlobalNetworkListGlobalNetworkConnectionsObservation struct {

	// +kubebuilder:validation:Optional
	SLOToGlobalDr []GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrObservation `json:"sloToGlobalDr,omitempty" tf:"slo_to_global_dr,omitempty"`

	// +kubebuilder:validation:Optional
	SliToGlobalDr []GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrObservation `json:"sliToGlobalDr,omitempty" tf:"sli_to_global_dr,omitempty"`
}

type IngressEgressGwGlobalNetworkListGlobalNetworkConnectionsParameters struct {

	// +kubebuilder:validation:Optional
	DisableForwardProxy *bool `json:"disableForwardProxy,omitempty" tf:"disable_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	EnableForwardProxy []GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyParameters `json:"enableForwardProxy,omitempty" tf:"enable_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	SLOToGlobalDr []GlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrParameters `json:"sloToGlobalDr,omitempty" tf:"slo_to_global_dr,omitempty"`

	// +kubebuilder:validation:Optional
	SliToGlobalDr []GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrParameters `json:"sliToGlobalDr,omitempty" tf:"sli_to_global_dr,omitempty"`
}

type IngressEgressGwGlobalNetworkListObservation struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkConnections []IngressEgressGwGlobalNetworkListGlobalNetworkConnectionsObservation `json:"globalNetworkConnections,omitempty" tf:"global_network_connections,omitempty"`
}

type IngressEgressGwGlobalNetworkListParameters struct {

	// +kubebuilder:validation:Optional
	GlobalNetworkConnections []IngressEgressGwGlobalNetworkListGlobalNetworkConnectionsParameters `json:"globalNetworkConnections,omitempty" tf:"global_network_connections,omitempty"`
}

type IngressEgressGwInsideStaticRoutesObservation struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []InsideStaticRoutesStaticRouteListObservation `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type IngressEgressGwInsideStaticRoutesParameters struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []InsideStaticRoutesStaticRouteListParameters `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type IngressEgressGwInsideSubnetObservation struct {
}

type IngressEgressGwInsideSubnetParameters struct {

	// +kubebuilder:validation:Optional
	ExistingSubnet []ExistingSubnetParameters `json:"existingSubnet,omitempty" tf:"existing_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NewSubnet []NewSubnetParameters `json:"newSubnet,omitempty" tf:"new_subnet,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesObservation struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []IngressEgressGwOutsideStaticRoutesStaticRouteListObservation `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesParameters struct {

	// +kubebuilder:validation:Optional
	StaticRouteList []IngressEgressGwOutsideStaticRoutesStaticRouteListParameters `json:"staticRouteList,omitempty" tf:"static_route_list,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesStaticRouteListCustomStaticRouteObservation struct {

	// +kubebuilder:validation:Optional
	Nexthop []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation `json:"nexthop,omitempty" tf:"nexthop,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesStaticRouteListCustomStaticRouteParameters struct {

	// +kubebuilder:validation:Optional
	Attrs []*string `json:"attrs,omitempty" tf:"attrs,omitempty"`

	// +kubebuilder:validation:Optional
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	Nexthop []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// +kubebuilder:validation:Optional
	Subnets []OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesStaticRouteListObservation struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []IngressEgressGwOutsideStaticRoutesStaticRouteListCustomStaticRouteObservation `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`
}

type IngressEgressGwOutsideStaticRoutesStaticRouteListParameters struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []IngressEgressGwOutsideStaticRoutesStaticRouteListCustomStaticRouteParameters `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`

	// +kubebuilder:validation:Optional
	SimpleStaticRoute *string `json:"simpleStaticRoute,omitempty" tf:"simple_static_route,omitempty"`
}

type IngressEgressGwOutsideSubnetObservation struct {
}

type IngressEgressGwOutsideSubnetParameters struct {

	// +kubebuilder:validation:Optional
	ExistingSubnet []OutsideSubnetExistingSubnetParameters `json:"existingSubnet,omitempty" tf:"existing_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NewSubnet []OutsideSubnetNewSubnetParameters `json:"newSubnet,omitempty" tf:"new_subnet,omitempty"`
}

type IngressGwLocalSubnetObservation struct {
}

type IngressGwLocalSubnetParameters struct {

	// +kubebuilder:validation:Optional
	ExistingSubnet []LocalSubnetExistingSubnetParameters `json:"existingSubnet,omitempty" tf:"existing_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NewSubnet []LocalSubnetNewSubnetParameters `json:"newSubnet,omitempty" tf:"new_subnet,omitempty"`
}

type InsideNetworkObservation struct {
}

type InsideNetworkParameters struct {

	// +kubebuilder:validation:Optional
	ExistingNetwork []ExistingNetworkParameters `json:"existingNetwork,omitempty" tf:"existing_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetwork []NewNetworkParameters `json:"newNetwork,omitempty" tf:"new_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetworkAutogenerate []NewNetworkAutogenerateParameters `json:"newNetworkAutogenerate,omitempty" tf:"new_network_autogenerate,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation struct {

	// +kubebuilder:validation:Optional
	Interface []StaticRouteListCustomStaticRouteNexthopInterfaceObservation `json:"interface,omitempty" tf:"interface,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters struct {

	// +kubebuilder:validation:Optional
	Interface []StaticRouteListCustomStaticRouteNexthopInterfaceParameters `json:"interface,omitempty" tf:"interface,omitempty"`

	// +kubebuilder:validation:Optional
	NexthopAddress []StaticRouteListCustomStaticRouteNexthopNexthopAddressParameters `json:"nexthopAddress,omitempty" tf:"nexthop_address,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteObservation struct {

	// +kubebuilder:validation:Optional
	Nexthop []InsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation `json:"nexthop,omitempty" tf:"nexthop,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteParameters struct {

	// +kubebuilder:validation:Optional
	Attrs []*string `json:"attrs,omitempty" tf:"attrs,omitempty"`

	// +kubebuilder:validation:Optional
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	Nexthop []InsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// +kubebuilder:validation:Optional
	Subnets []InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Observation struct {
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Observation struct {
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsObservation struct {
}

type InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []InsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type InsideStaticRoutesStaticRouteListObservation struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []InsideStaticRoutesStaticRouteListCustomStaticRouteObservation `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`
}

type InsideStaticRoutesStaticRouteListParameters struct {

	// +kubebuilder:validation:Optional
	CustomStaticRoute []InsideStaticRoutesStaticRouteListCustomStaticRouteParameters `json:"customStaticRoute,omitempty" tf:"custom_static_route,omitempty"`

	// +kubebuilder:validation:Optional
	SimpleStaticRoute *string `json:"simpleStaticRoute,omitempty" tf:"simple_static_route,omitempty"`
}

type LocalNetworkExistingNetworkObservation struct {
}

type LocalNetworkExistingNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type LocalNetworkNewNetworkAutogenerateObservation struct {
}

type LocalNetworkNewNetworkAutogenerateParameters struct {

	// +kubebuilder:validation:Optional
	Autogenerate *bool `json:"autogenerate,omitempty" tf:"autogenerate,omitempty"`
}

type LocalNetworkNewNetworkObservation struct {
}

type LocalNetworkNewNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type LocalNetworkObservation struct {
}

type LocalNetworkParameters struct {

	// +kubebuilder:validation:Optional
	ExistingNetwork []LocalNetworkExistingNetworkParameters `json:"existingNetwork,omitempty" tf:"existing_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetwork []LocalNetworkNewNetworkParameters `json:"newNetwork,omitempty" tf:"new_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetworkAutogenerate []LocalNetworkNewNetworkAutogenerateParameters `json:"newNetworkAutogenerate,omitempty" tf:"new_network_autogenerate,omitempty"`
}

type LocalSubnetExistingSubnetObservation struct {
}

type LocalSubnetExistingSubnetParameters struct {

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type LocalSubnetNewSubnetObservation struct {
}

type LocalSubnetNewSubnetParameters struct {

	// +kubebuilder:validation:Optional
	PrimaryIPv4 *string `json:"primaryIpv4,omitempty" tf:"primary_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type NewNetworkAutogenerateObservation struct {
}

type NewNetworkAutogenerateParameters struct {

	// +kubebuilder:validation:Optional
	Autogenerate *bool `json:"autogenerate,omitempty" tf:"autogenerate,omitempty"`
}

type NewNetworkObservation struct {
}

type NewNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type NewSubnetObservation struct {
}

type NewSubnetParameters struct {

	// +kubebuilder:validation:Optional
	PrimaryIPv4 *string `json:"primaryIpv4,omitempty" tf:"primary_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type OutsideNetworkExistingNetworkObservation struct {
}

type OutsideNetworkExistingNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type OutsideNetworkNewNetworkAutogenerateObservation struct {
}

type OutsideNetworkNewNetworkAutogenerateParameters struct {

	// +kubebuilder:validation:Optional
	Autogenerate *bool `json:"autogenerate,omitempty" tf:"autogenerate,omitempty"`
}

type OutsideNetworkNewNetworkObservation struct {
}

type OutsideNetworkNewNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type OutsideNetworkObservation struct {
}

type OutsideNetworkParameters struct {

	// +kubebuilder:validation:Optional
	ExistingNetwork []OutsideNetworkExistingNetworkParameters `json:"existingNetwork,omitempty" tf:"existing_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetwork []OutsideNetworkNewNetworkParameters `json:"newNetwork,omitempty" tf:"new_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetworkAutogenerate []OutsideNetworkNewNetworkAutogenerateParameters `json:"newNetworkAutogenerate,omitempty" tf:"new_network_autogenerate,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Observation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Observation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressObservation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation struct {

	// +kubebuilder:validation:Optional
	Interface []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceObservation `json:"interface,omitempty" tf:"interface,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters struct {

	// +kubebuilder:validation:Optional
	Interface []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceParameters `json:"interface,omitempty" tf:"interface,omitempty"`

	// +kubebuilder:validation:Optional
	NexthopAddress []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressParameters `json:"nexthopAddress,omitempty" tf:"nexthop_address,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Observation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Observation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsObservation struct {
}

type OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []OutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type OutsideSubnetExistingSubnetObservation struct {
}

type OutsideSubnetExistingSubnetParameters struct {

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type OutsideSubnetNewSubnetObservation struct {
}

type OutsideSubnetNewSubnetParameters struct {

	// +kubebuilder:validation:Optional
	PrimaryIPv4 *string `json:"primaryIpv4,omitempty" tf:"primary_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type PolicyInterceptionRulesDomainMatchObservation struct {
}

type PolicyInterceptionRulesDomainMatchParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type SiteLocalNetworkExistingNetworkObservation struct {
}

type SiteLocalNetworkExistingNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SiteLocalNetworkNewNetworkAutogenerateObservation struct {
}

type SiteLocalNetworkNewNetworkAutogenerateParameters struct {

	// +kubebuilder:validation:Optional
	Autogenerate *bool `json:"autogenerate,omitempty" tf:"autogenerate,omitempty"`
}

type SiteLocalNetworkNewNetworkObservation struct {
}

type SiteLocalNetworkNewNetworkParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SiteLocalNetworkObservation struct {
}

type SiteLocalNetworkParameters struct {

	// +kubebuilder:validation:Optional
	ExistingNetwork []SiteLocalNetworkExistingNetworkParameters `json:"existingNetwork,omitempty" tf:"existing_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetwork []SiteLocalNetworkNewNetworkParameters `json:"newNetwork,omitempty" tf:"new_network,omitempty"`

	// +kubebuilder:validation:Optional
	NewNetworkAutogenerate []SiteLocalNetworkNewNetworkAutogenerateParameters `json:"newNetworkAutogenerate,omitempty" tf:"new_network_autogenerate,omitempty"`
}

type SiteLocalSubnetExistingSubnetObservation struct {
}

type SiteLocalSubnetExistingSubnetParameters struct {

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type SiteLocalSubnetNewSubnetObservation struct {
}

type SiteLocalSubnetNewSubnetParameters struct {

	// +kubebuilder:validation:Optional
	PrimaryIPv4 *string `json:"primaryIpv4,omitempty" tf:"primary_ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`
}

type SiteLocalSubnetObservation struct {
}

type SiteLocalSubnetParameters struct {

	// +kubebuilder:validation:Optional
	ExistingSubnet []SiteLocalSubnetExistingSubnetParameters `json:"existingSubnet,omitempty" tf:"existing_subnet,omitempty"`

	// +kubebuilder:validation:Optional
	NewSubnet []SiteLocalSubnetNewSubnetParameters `json:"newSubnet,omitempty" tf:"new_subnet,omitempty"`
}

type StaticRouteListCustomStaticRouteNexthopInterfaceObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type StaticRouteListCustomStaticRouteNexthopInterfaceParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Observation struct {
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Observation struct {
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Addr *string `json:"addr,omitempty" tf:"addr,omitempty"`
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressObservation struct {
}

type StaticRouteListCustomStaticRouteNexthopNexthopAddressParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []CustomStaticRouteNexthopNexthopAddressIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []CustomStaticRouteNexthopNexthopAddressIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type StorageClassListStorageClassesObservation struct {
}

type StorageClassListStorageClassesParameters struct {

	// +kubebuilder:validation:Optional
	DefaultStorageClass *bool `json:"defaultStorageClass,omitempty" tf:"default_storage_class,omitempty"`

	// +kubebuilder:validation:Optional
	OpenebsEnterprise []StorageClassesOpenebsEnterpriseParameters `json:"openebsEnterprise,omitempty" tf:"openebs_enterprise,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClassName *string `json:"storageClassName,omitempty" tf:"storage_class_name,omitempty"`
}

type StorageClassesOpenebsEnterpriseObservation struct {
}

type StorageClassesOpenebsEnterpriseParameters struct {

	// +kubebuilder:validation:Optional
	Replication *float64 `json:"replication,omitempty" tf:"replication,omitempty"`

	// +kubebuilder:validation:Optional
	StorageClassSize *float64 `json:"storageClassSize,omitempty" tf:"storage_class_size,omitempty"`
}

type TLSInterceptCustomCertificateCustomHashAlgorithmsObservation struct {
}

type TLSInterceptCustomCertificateCustomHashAlgorithmsParameters struct {

	// +kubebuilder:validation:Required
	HashAlgorithms []*string `json:"hashAlgorithms" tf:"hash_algorithms,omitempty"`
}

type TLSInterceptCustomCertificateDisableOcspStaplingObservation struct {
}

type TLSInterceptCustomCertificateDisableOcspStaplingParameters struct {
}

type TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoInternalObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoInternalParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyBlindfoldSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	DecryptionProvider *string `json:"decryptionProvider,omitempty" tf:"decryption_provider,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	StoreProvider *string `json:"storeProvider,omitempty" tf:"store_provider,omitempty"`
}

type TLSInterceptCustomCertificatePrivateKeyClearSecretInfoObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyClearSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type TLSInterceptCustomCertificatePrivateKeyObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyParameters struct {

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfo []CustomCertificatePrivateKeyBlindfoldSecretInfoParameters `json:"blindfoldSecretInfo,omitempty" tf:"blindfold_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	BlindfoldSecretInfoInternal []CustomCertificatePrivateKeyBlindfoldSecretInfoInternalParameters `json:"blindfoldSecretInfoInternal,omitempty" tf:"blindfold_secret_info_internal,omitempty"`

	// +kubebuilder:validation:Optional
	ClearSecretInfo []CustomCertificatePrivateKeyClearSecretInfoParameters `json:"clearSecretInfo,omitempty" tf:"clear_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncodingType *string `json:"secretEncodingType,omitempty" tf:"secret_encoding_type,omitempty"`

	// +kubebuilder:validation:Optional
	VaultSecretInfo []CustomCertificatePrivateKeyVaultSecretInfoParameters `json:"vaultSecretInfo,omitempty" tf:"vault_secret_info,omitempty"`

	// +kubebuilder:validation:Optional
	WingmanSecretInfo []CustomCertificatePrivateKeyWingmanSecretInfoParameters `json:"wingmanSecretInfo,omitempty" tf:"wingman_secret_info,omitempty"`
}

type TLSInterceptCustomCertificatePrivateKeyVaultSecretInfoObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyVaultSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// +kubebuilder:validation:Optional
	Provider *string `json:"provider,omitempty" tf:"provider,omitempty"`

	// +kubebuilder:validation:Optional
	SecretEncoding *string `json:"secretEncoding,omitempty" tf:"secret_encoding,omitempty"`

	// +kubebuilder:validation:Optional
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type TLSInterceptCustomCertificatePrivateKeyWingmanSecretInfoObservation struct {
}

type TLSInterceptCustomCertificatePrivateKeyWingmanSecretInfoParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TLSInterceptCustomCertificateUseSystemDefaultsObservation struct {
}

type TLSInterceptCustomCertificateUseSystemDefaultsParameters struct {
}

type TLSInterceptPolicyInterceptionRulesDomainMatchObservation struct {
}

type TLSInterceptPolicyInterceptionRulesDomainMatchParameters struct {

	// +kubebuilder:validation:Optional
	ExactValue *string `json:"exactValue,omitempty" tf:"exact_value,omitempty"`

	// +kubebuilder:validation:Optional
	RegexValue *string `json:"regexValue,omitempty" tf:"regex_value,omitempty"`

	// +kubebuilder:validation:Optional
	SuffixValue *string `json:"suffixValue,omitempty" tf:"suffix_value,omitempty"`
}

type TLSInterceptPolicyInterceptionRulesObservation struct {
}

type TLSInterceptPolicyInterceptionRulesParameters struct {

	// +kubebuilder:validation:Optional
	DisableInterception *bool `json:"disableInterception,omitempty" tf:"disable_interception,omitempty"`

	// +kubebuilder:validation:Optional
	DomainMatch []PolicyInterceptionRulesDomainMatchParameters `json:"domainMatch,omitempty" tf:"domain_match,omitempty"`

	// +kubebuilder:validation:Optional
	EnableInterception *bool `json:"enableInterception,omitempty" tf:"enable_interception,omitempty"`
}

type VoltstackClusterActiveForwardProxyPoliciesForwardProxyPoliciesObservation struct {
}

type VoltstackClusterActiveForwardProxyPoliciesForwardProxyPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterActiveNetworkPoliciesNetworkPoliciesObservation struct {
}

type VoltstackClusterActiveNetworkPoliciesNetworkPoliciesParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterDcClusterGroupObservation struct {
}

type VoltstackClusterDcClusterGroupParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyObservation struct {
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyParameters struct {

	// +kubebuilder:validation:Optional
	ConnectionTimeout *float64 `json:"connectionTimeout,omitempty" tf:"connection_timeout,omitempty"`

	// +kubebuilder:validation:Optional
	MaxConnectAttempts *float64 `json:"maxConnectAttempts,omitempty" tf:"max_connect_attempts,omitempty"`

	// +kubebuilder:validation:Optional
	NoInterception *bool `json:"noInterception,omitempty" tf:"no_interception,omitempty"`

	// +kubebuilder:validation:Optional
	TLSIntercept []GlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyTLSInterceptParameters `json:"tlsIntercept,omitempty" tf:"tls_intercept,omitempty"`

	// +kubebuilder:validation:Optional
	WhiteListedPorts []*float64 `json:"whiteListedPorts,omitempty" tf:"white_listed_ports,omitempty"`

	// +kubebuilder:validation:Optional
	WhiteListedPrefixes []*string `json:"whiteListedPrefixes,omitempty" tf:"white_listed_prefixes,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsObservation struct {

	// +kubebuilder:validation:Optional
	SLOToGlobalDr []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrObservation `json:"sloToGlobalDr,omitempty" tf:"slo_to_global_dr,omitempty"`

	// +kubebuilder:validation:Optional
	SliToGlobalDr []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrObservation `json:"sliToGlobalDr,omitempty" tf:"sli_to_global_dr,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsParameters struct {

	// +kubebuilder:validation:Optional
	DisableForwardProxy *bool `json:"disableForwardProxy,omitempty" tf:"disable_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	EnableForwardProxy []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsEnableForwardProxyParameters `json:"enableForwardProxy,omitempty" tf:"enable_forward_proxy,omitempty"`

	// +kubebuilder:validation:Optional
	SLOToGlobalDr []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrParameters `json:"sloToGlobalDr,omitempty" tf:"slo_to_global_dr,omitempty"`

	// +kubebuilder:validation:Optional
	SliToGlobalDr []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrParameters `json:"sliToGlobalDr,omitempty" tf:"sli_to_global_dr,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrObservation struct {

	// +kubebuilder:validation:Optional
	GlobalVn []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnObservation `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrParameters struct {

	// +kubebuilder:validation:Optional
	GlobalVn []VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSLOToGlobalDrGlobalVnParameters `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrObservation struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrGlobalVnObservation `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type VoltstackClusterGlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrParameters struct {

	// +kubebuilder:validation:Optional
	GlobalVn []GlobalNetworkListGlobalNetworkConnectionsSliToGlobalDrGlobalVnParameters `json:"globalVn,omitempty" tf:"global_vn,omitempty"`
}

type VoltstackClusterK8SClusterObservation struct {
}

type VoltstackClusterK8SClusterParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceObservation struct {
	Kind *string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// +kubebuilder:validation:Optional
	Tenant *string `json:"tenant,omitempty" tf:"tenant,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressObservation struct {
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []OutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation struct {

	// +kubebuilder:validation:Optional
	Interface []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceObservation `json:"interface,omitempty" tf:"interface,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters struct {

	// +kubebuilder:validation:Optional
	Interface []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopInterfaceParameters `json:"interface,omitempty" tf:"interface,omitempty"`

	// +kubebuilder:validation:Optional
	NexthopAddress []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopNexthopAddressParameters `json:"nexthopAddress,omitempty" tf:"nexthop_address,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteObservation struct {

	// +kubebuilder:validation:Optional
	Nexthop []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopObservation `json:"nexthop,omitempty" tf:"nexthop,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteParameters struct {

	// +kubebuilder:validation:Optional
	Attrs []*string `json:"attrs,omitempty" tf:"attrs,omitempty"`

	// +kubebuilder:validation:Optional
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Optional
	Nexthop []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteNexthopParameters `json:"nexthop,omitempty" tf:"nexthop,omitempty"`

	// +kubebuilder:validation:Optional
	Subnets []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters `json:"subnets,omitempty" tf:"subnets,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Observation struct {
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Observation struct {
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters struct {

	// +kubebuilder:validation:Optional
	Plen *float64 `json:"plen,omitempty" tf:"plen,omitempty"`

	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsObservation struct {
}

type VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsParameters struct {

	// +kubebuilder:validation:Optional
	IPv4 []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv4Parameters `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6 []VoltstackClusterOutsideStaticRoutesStaticRouteListCustomStaticRouteSubnetsIPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`
}

type VoltstackClusterStorageClassListObservation struct {
}

type VoltstackClusterStorageClassListParameters struct {

	// +kubebuilder:validation:Optional
	StorageClasses []StorageClassListStorageClassesParameters `json:"storageClasses,omitempty" tf:"storage_classes,omitempty"`
}

// GCPVPCSiteSpec defines the desired state of GCPVPCSite
type GCPVPCSiteSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GCPVPCSiteParameters `json:"forProvider"`
}

// GCPVPCSiteStatus defines the observed state of GCPVPCSite.
type GCPVPCSiteStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GCPVPCSiteObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GCPVPCSite is the Schema for the GCPVPCSites API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,volterra}
type GCPVPCSite struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GCPVPCSiteSpec   `json:"spec"`
	Status            GCPVPCSiteStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GCPVPCSiteList contains a list of GCPVPCSites
type GCPVPCSiteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GCPVPCSite `json:"items"`
}

// Repository type metadata.
var (
	GCPVPCSite_Kind             = "GCPVPCSite"
	GCPVPCSite_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GCPVPCSite_Kind}.String()
	GCPVPCSite_KindAPIVersion   = GCPVPCSite_Kind + "." + CRDGroupVersion.String()
	GCPVPCSite_GroupVersionKind = CRDGroupVersion.WithKind(GCPVPCSite_Kind)
)

func init() {
	SchemeBuilder.Register(&GCPVPCSite{}, &GCPVPCSiteList{})
}
